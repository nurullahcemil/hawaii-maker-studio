{% if block.settings.debug_text_block %}
  <div style="background: #fff3cd; padding: 10px; margin: 10px 0; border: 2px solid #856404; font-family: monospace; font-size: 11px;">
    <strong>üîç TEXT BLOCK DEBUG</strong><br>
    <strong>Event Drop Available:</strong> {% if event_drop %}YES{% else %}NO{% endif %}<br>
    <strong>Field Key Setting:</strong> "{{ block.settings.source_field_key }}"<br>
    <strong>Field Key Blank:</strong> {% if block.settings.source_field_key == blank %}YES{% else %}NO{% endif %}<br>
    {% if event_drop %}
      <strong>Event Title:</strong> {{ event_drop.title }}<br>
      {% if block.settings.source_field_key != blank %}
        {% assign test_field = event_drop[block.settings.source_field_key] %}
        <strong>Field Found:</strong> {% if test_field %}YES{% else %}NO{% endif %}<br>
        {% if test_field %}
          <strong>Field Type:</strong> {{ test_field.type }}<br>
          <strong>Field Value:</strong> "{{ test_field.value }}"<br>
          <strong>Field Raw:</strong> "{{ test_field }}"<br>
        {% endif %}
      {% endif %}
    {% endif %}
  </div>
{% endif %}

{% liquid
  assign from_mo = false
  assign mo_field = nil
  assign trying_mo = false
  
  if event_drop and block.settings.source_field_key != blank
    assign trying_mo = true
    assign mo_field = event_drop[block.settings.source_field_key]
    if mo_field
      assign from_mo = true
    endif
  endif
%}

{% if from_mo %}
  {% liquid
    assign render_mode = block.settings.render_as | default: 'auto'
    if render_mode == 'auto'
      if mo_field.type == 'rich_text_field'
        assign render_mode = 'richtext'
      else
        assign render_mode = 'plain'
      endif
    endif
  %}
  
  {% if render_mode == 'richtext' %}
    <div {{ block.shopify_attributes }} class="rte metaobject-text">
      {{ mo_field | metafield_tag }}
    </div>
  {% else %}
    <div {{ block.shopify_attributes }} class="metaobject-text">
      {{ mo_field.value }}
    </div>
  {% endif %}
{% elsif trying_mo and block.settings.fallback_text != blank %}
  {% render 'text', block: block, fallback_text: block.settings.fallback_text %}
{% else %}
  {% render 'text', block: block %}
{% endif %}

{% schema %}
{
  "name": "t:names.text",
  "tag": null,
  "settings": [
    {
      "type": "richtext",
      "id": "text",
      "label": "t:settings.text"
    },
    {
      "type": "header",
      "content": "Metaobject Source"
    },
    {
      "type": "text",
      "id": "source_field_key",
      "label": "Metaobject field key",
      "info": "Optional: Pull content from metaobject field (e.g., 'description', 'audience'). Leave blank to use manual text above."
    },
    {
      "type": "select",
      "id": "render_as",
      "label": "Render as",
      "options": [
        {
          "value": "auto",
          "label": "Auto-detect"
        },
        {
          "value": "plain",
          "label": "Plain text"
        },
        {
          "value": "richtext",
          "label": "Rich text"
        }
      ],
      "default": "auto",
      "info": "How to render metaobject content"
    },
    {
      "type": "text",
      "id": "fallback_text",
      "label": "Fallback text",
      "info": "Text to show if metaobject field is empty"
    },
    {
      "type": "checkbox",
      "id": "debug_text_block",
      "label": "üîç Debug this text block",
      "default": false,
      "info": "Show debug info for this specific text block"
    },
    {
      "type": "header",
      "content": "t:content.layout"
    },
    {
      "type": "select",
      "id": "width",
      "label": "t:settings.width",
      "options": [
        {
          "value": "fit-content",
          "label": "t:options.fit"
        },
        {
          "value": "100%",
          "label": "t:options.fill"
        }
      ],
      "default": "fit-content"
    },
    {
      "type": "select",
      "id": "max_width",
      "label": "t:settings.max_width",
      "options": [
        {
          "value": "narrow",
          "label": "t:options.narrow"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "none",
          "label": "t:options.none"
        }
      ],
      "default": "normal"
    },
    {
      "type": "text_alignment",
      "id": "alignment",
      "label": "t:settings.alignment",
      "default": "left",
      "visible_if": "{{ block.settings.width == '100%' }}"
    },
    {
      "type": "header",
      "content": "t:content.typography"
    },
    {
      "type": "select",
      "id": "type_preset",
      "label": "t:settings.preset",
      "options": [
        {
          "value": "rte",
          "label": "t:options.default"
        },
        {
          "value": "paragraph",
          "label": "t:options.paragraph"
        },
        {
          "value": "h1",
          "label": "t:options.h1"
        },
        {
          "value": "h2",
          "label": "t:options.h2"
        },
        {
          "value": "h3",
          "label": "t:options.h3"
        },
        {
          "value": "h4",
          "label": "t:options.h4"
        },
        {
          "value": "h5",
          "label": "t:options.h5"
        },
        {
          "value": "h6",
          "label": "t:options.h6"
        },
        {
          "value": "custom",
          "label": "t:options.custom"
        }
      ],
      "default": "rte",
      "info": "t:info.edit_presets_in_theme_settings"
    },
    {
      "type": "select",
      "id": "font",
      "label": "t:settings.font",
      "options": [
        {
          "value": "var(--font-body--family)",
          "label": "t:options.body"
        },
        {
          "value": "var(--font-subheading--family)",
          "label": "t:options.subheading"
        },
        {
          "value": "var(--font-heading--family)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--font-accent--family)",
          "label": "t:options.accent"
        }
      ],
      "default": "var(--font-body--family)",
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "font_size",
      "label": "t:settings.size",
      "options": [
        {
          "value": "",
          "label": "t:options.default"
        },
        {
          "value": "0.625rem",
          "label": "10px"
        },
        {
          "value": "0.75rem",
          "label": "12px"
        },
        {
          "value": "0.875rem",
          "label": "14px"
        },
        {
          "value": "1rem",
          "label": "16px"
        },
        {
          "value": "1.125rem",
          "label": "18px"
        },
        {
          "value": "1.25rem",
          "label": "20px"
        },
        {
          "value": "1.5rem",
          "label": "24px"
        },
        {
          "value": "2rem",
          "label": "32px"
        },
        {
          "value": "2.5rem",
          "label": "40px"
        },
        {
          "value": "3rem",
          "label": "48px"
        },
        {
          "value": "3.5rem",
          "label": "56px"
        },
        {
          "value": "4.5rem",
          "label": "72px"
        },
        {
          "value": "5.5rem",
          "label": "88px"
        },
        {
          "value": "7.5rem",
          "label": "120px"
        },
        {
          "value": "9.5rem",
          "label": "152px"
        },
        {
          "value": "11.5rem",
          "label": "184px"
        }
      ],
      "default": "1rem",
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "line_height",
      "label": "t:settings.line_height",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "letter_spacing",
      "label": "t:settings.letter_spacing",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "case",
      "label": "t:settings.case",
      "options": [
        {
          "value": "none",
          "label": "t:options.default"
        },
        {
          "value": "uppercase",
          "label": "t:options.uppercase"
        }
      ],
      "default": "none",
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "wrap",
      "label": "t:settings.wrap",
      "options": [
        {
          "value": "pretty",
          "label": "t:options.pretty"
        },
        {
          "value": "balance",
          "label": "t:options.balance"
        },
        {
          "value": "nowrap",
          "label": "t:options.none"
        }
      ],
      "visible_if": "{{ block.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "color",
      "label": "t:settings.color",
      "options": [
        {
          "value": "var(--color-foreground)",
          "label": "t:options.text"
        },
        {
          "value": "var(--color-foreground-heading)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--color-primary)",
          "label": "t:options.link"
        }
      ],
      "default": "var(--color-foreground)",
      "visible_if": "{{ block.settings.type_preset != 'rte' }}"
    },
    {
      "type": "header",
      "content": "t:content.appearance"
    },
    {
      "type": "checkbox",
      "id": "background",
      "label": "t:settings.background",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "t:settings.background_color",
      "alpha": true,
      "default": "#00000026",
      "visible_if": "{{ block.settings.background }}"
    },
    {
      "type": "range",
      "id": "corner_radius",
      "label": "t:settings.corner_radius",
      "default": 0,
      "min": 0,
      "max": 50,
      "step": 1,
      "visible_if": "{{ block.settings.background }}"
    },
    {
      "type": "header",
      "content": "t:content.padding"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-inline-start",
      "label": "t:settings.left",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-inline-end",
      "label": "t:settings.right",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "t:names.text",
      "category": "t:categories.basic",
      "settings": {
        "text": "<p>We make things that work better and last longer. Our products solve real problems with clean design and honest materials.</p>"
      }
    },
    {
      "name": "t:names.heading",
      "category": "t:categories.basic",
      "settings": {
        "text": "<h2>New arrivals</h2>"
      }
    }
  ]
}
{% endschema %}
