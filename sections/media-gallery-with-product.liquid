{% schema %}
{
  "name": "Gallery with Product",
  "class": "custom-media-gallery-with-product",
  "settings": [
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "select",
      "id": "container_size",
      "label": "Container Size",
      "options": [
        { "value": "page-width", "label": "Page Width" },
        { "value": "large", "label": "Large" },
        { "value": "medium", "label": "Medium" },
        { "value": "full-width", "label": "Full Width" }
      ],
      "default": "full-width"
    },
    {
      "type": "checkbox",
      "id": "add_side_paddings",
      "label": "Add Side Paddings",
      "default": true
    },
    {
      "type": "range",
      "id": "mobile_side_padding",
      "label": "Mobile Side Padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "default": 20,
      "unit": "px",
      "info": "Side padding for mobile devices"
    },
    {
      "type": "range",
      "id": "top_padding",
      "label": "Top Padding",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "label": "Bottom Padding",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "default": 20
    },
    {
      "type": "header",
      "content": "Gallery Settings"
    },

    {
      "type": "select",
      "id": "image_orientation",
      "label": "Image Orientation",
      "options": [
        { "value": "auto", "label": "Auto (Based on image dimensions)" },
        { "value": "vertical", "label": "Vertical (Instagram-style)" },
        { "value": "horizontal", "label": "Horizontal (Landscape)" },
        { "value": "square", "label": "Square" }
      ],
      "default": "auto"
    },
    {
      "type": "range",
      "id": "desktop_columns",
      "label": "Desktop Columns",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 4,
      "info": "Number of columns to show on desktop"
    },
    {
      "type": "range",
      "id": "mobile_columns",
      "label": "Mobile Columns",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2,
      "info": "Number of columns to show on mobile"
    },
    {
      "type": "header",
      "content": "Product Settings"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Select Product",
      "info": "Product images will be displayed automatically in the gallery"
    },
    {
      "type": "checkbox",
      "id": "show_product_title",
      "label": "Show Product Title",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show Quantity Selector",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Gallery with Product"
    }
  ]
}
{% endschema %}

{%- liquid
  assign selected_variant = product.selected_or_first_available_variant
  assign available = selected_variant.available
  assign product_form_id = 'product-form-' | append: product.id | append: '-' | append: section.id
  assign add_to_cart_label = 'product.store_front.add_to_cart' | t
  assign sold_out_label = 'product.store_front.sold_out' | t
  
  # Sort media to place videos third
  assign video_media = product.media | where: "media_type", "video"
  assign external_video_media = product.media | where: "media_type", "external_video"
  assign image_media = product.media | where: "media_type", "image"
  
  # Get first two images
  assign first_two_images = image_media | slice: 0, 2
  # Get remaining images after first two
  assign remaining_images = image_media | slice: 2, 999
  
  # Combine: first two images + videos + remaining images
  assign sorted_media = first_two_images | concat: video_media | concat: external_video_media | concat: remaining_images
-%}

{%- liquid
  # Determine the appropriate collection based on event type
  assign collection_url = ''
  assign collection_text = ''
  
  # DEBUG: Media gallery product and metafield data
  echo "<!-- MEDIA DEBUG: Product handle: " | append: product.handle | append: " -->"
  echo "<!-- MEDIA DEBUG: Custom event handle: " | append: product.metafields.custom.event_handle | append: " -->"
  
  if product and product.metafields.custom.event_handle != blank
    assign event_handle = product.metafields.custom.event_handle.value
    assign event = shop.metaobjects.event[event_handle]
    
    echo "<!-- MEDIA DEBUG: Event found: " | append: event.id | append: " -->"
    echo "<!-- MEDIA DEBUG: Event location: " | append: event.location.value | append: " -->"
    
    if event and event.location.value != blank
      assign event_location_val = event.location.value | downcase
      echo "<!-- MEDIA DEBUG: Event location lowercased: " | append: event_location_val | append: " -->"
      
      if event_location_val contains 'honolulu'
        assign collection_url = '/collections/honolulu'
        assign collection_text = 'All Honolulu Classes'
      elsif event_location_val contains 'new york' or event_location_val contains 'nyc'
        assign collection_url = '/pages/team-building-events-nyc'
        assign collection_text = 'All NYC Classes'
      elsif event_location_val contains 'irvine'
        assign collection_url = '/collections/irvine'
        assign collection_text = 'All Irvine Classes'
      elsif event_location_val contains 'san francisco' or event_location_val contains 'sf'
        assign collection_url = '/collections/san-francisco'
        assign collection_text = 'All San Francisco Classes'
      elsif event_location_val contains 'virtual'
        assign collection_url = '/collections/virtual'
        assign collection_text = 'All Virtual Classes'
      else
        assign collection_url = '/collections/workshops-dynamic'
        assign collection_text = 'All Classes'
      endif
    endif
  endif
  
  # Fallback: Check product title/handle if no event metaobject
  if collection_url == blank and product
    assign product_title_lower = product.title | downcase
    assign product_handle_lower = product.handle | downcase
    
    echo "<!-- MEDIA DEBUG FALLBACK: Product title: " | append: product_title_lower | append: " -->"
    echo "<!-- MEDIA DEBUG FALLBACK: Product handle: " | append: product_handle_lower | append: " -->"
    
    if product_title_lower contains 'honolulu' or product_handle_lower contains 'honolulu'
      assign collection_url = '/collections/honolulu'
      assign collection_text = 'All Honolulu Classes'
    elsif product_title_lower contains 'new york' or product_title_lower contains 'nyc' or product_handle_lower contains 'new-york' or product_handle_lower contains 'nyc'
      assign collection_url = '/pages/team-building-events-nyc'
      assign collection_text = 'All NYC Classes'
    elsif product_title_lower contains 'irvine' or product_handle_lower contains 'irvine'
      assign collection_url = '/collections/irvine'
      assign collection_text = 'All Irvine Classes'
    elsif product_title_lower contains 'san francisco' or product_title_lower contains 'sf' or product_handle_lower contains 'san-francisco' or product_handle_lower contains 'sf'
      assign collection_url = '/collections/san-francisco'
      assign collection_text = 'All San Francisco Classes'
    elsif product_title_lower contains 'virtual' or product_handle_lower contains 'virtual'
      assign collection_url = '/collections/virtual'
      assign collection_text = 'All Virtual Classes'
    endif
  endif
  
  echo "<!-- MEDIA DEBUG: Final collection URL: " | append: collection_url | append: " -->"
  echo "<!-- MEDIA DEBUG: Final collection text: " | append: collection_text | append: " -->"
-%}

<div class="media-gallery-with-product-wrapper container container--{{ section.settings.container_size }} section-spacing {% if section.settings.add_side_paddings %}container--with-aside-paddings{% endif %}" style="padding-top: {{ section.settings.top_padding }}px; padding-bottom: {{ section.settings.bottom_padding }}px;">
  
  {% if collection_url != '' %}
    <!-- Back to Collection Button and Next Event Button -->
    <div class="back-to-collection-container" style="display: flex; align-items: center; justify-content: space-between; gap: 12px; margin-bottom: 20px; flex-wrap: wrap;">
      <a href="{{ collection_url }}" class="back-to-collection-btn">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        {{ collection_text }}
      </a>
      
      {% comment %} Discover workshops button removed - snippet deleted {% endcomment %}
    </div>
  {% endif %}
  
  <!-- Gallery Section -->
  <div class="gallery-section">
    <!-- Navigation Arrows positioned on gallery section -->
    <button class="gallery-nav prev {% if sorted_media.size <= 5 %}hidden{% endif %}">&lt;</button>
    <button class="gallery-nav next {% if sorted_media.size <= 5 %}hidden{% endif %}">&gt;</button>
    
    <div class="media-gallery-container" data-desktop-columns="{{ section.settings.desktop_columns }}" data-mobile-columns="{{ section.settings.mobile_columns }}" data-orientation="{{ section.settings.image_orientation }}">
      {% if product %}
        {% for media in sorted_media %}
          <div class="media-gallery-image-block {% if forloop.first %}featured-image{% endif %} {% if media.media_type == 'video' or media.media_type == 'external_video' %}video-block{% endif %}" data-index="{{ forloop.index0 }}" data-media-type="{{ media.media_type }}">
            {% if media.media_type == 'video' %}
              <div class="media-gallery-video-container">
                <video 
                  autoplay 
                  muted 
                  loop 
                  playsinline
                  preload="auto"
                  poster="{{ media.preview_image | img_url: '800x' }}"
                  class="media-gallery-video">
                  {% for source in media.sources %}
                    <source src="{{ source.url }}" type="{{ source.mime_type }}">
                  {% endfor %}
                  Your browser does not support the video tag.
                </video>
                <div class="video-play-pause-overlay" onclick="toggleVideoPlayback(this)">
                  <div class="play-pause-icon">⏸️</div>
                </div>
              </div>
            {% elsif media.media_type == 'external_video' %}
              <div class="media-gallery-video-container">
                {{ media | external_video_tag: autoplay: true, loop: true, muted: true, class: "media-gallery-external-video" }}
                <div class="video-play-pause-overlay" onclick="toggleExternalVideoPlayback(this)">
                  <div class="play-pause-icon">⏸️</div>
                </div>
              </div>
            {% else %}
              <a 
                href="#modal" 
                class="media-gallery-open-modal" 
                data-image-url="{{ media | img_url: '2048x' }}"
                data-caption="{{ media.alt | escape }}">
                <img 
                  src="{{ media | img_url: '800x' }}" 
                  alt="{{ media.alt | escape }}"
                  loading="lazy"
                  data-original-width="{{ media.width }}"
                  data-original-height="{{ media.height }}">
              </a>
            {% endif %}
          </div>
        {% endfor %}
      {% else %}
        <!-- Fallback for when no product is selected -->
        <div class="media-gallery-image-block featured-image">
          <div class="no-product-selected">
            <p>Please select a product in the theme editor</p>
          </div>
        </div>
      {% endif %}
    </div>
    

  </div>
</div>

<!-- Modal Structure -->
<div id="media-gallery-modal" class="media-gallery-modal" style="display:none;">
  <span class="media-gallery-close-modal">&times;</span>
  <div class="media-gallery-modal-image-container">
    <!-- Dynamic image elements will be inserted here -->
  </div>
  <div id="media-gallery-modal-caption"></div>
</div>

<style>
  /* Back to Collection Button Styles (Sub-nav inspired) */
  .back-to-collection-container {
    position: relative;
    margin-bottom: 20px;
    display: flex;
    justify-content: space-between;
  }

  .back-to-collection-btn {
    display: inline-flex;
    align-items: center;
    padding: 9px 12px;
    border-radius: 25px;
    text-decoration: none;
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    color: var(--color-foreground, #253230);
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.3s ease;
    box-sizing: border-box;
    position: relative;
    border: 1px solid var(--color-foreground, #253230);
    background-color: transparent;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .back-to-collection-btn:hover {
    background-color: rgba(37, 50, 48, 0.08);
    color: #253230;
  }

  .back-to-collection-btn svg {
    margin-right: 8px;
    transition: transform 0.3s ease;
  }

  .back-to-collection-btn:hover svg {
    transform: translateX(-2px);
  }

  .discover-workshops-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 9px 16px;
    border-radius: 25px;
    text-decoration: none;
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    color: var(--color-foreground, #253230);
    font-size: 14px;
    font-weight: 500;
    transition: all 0.3s ease;
    box-sizing: border-box;
    border: 1px solid var(--color-foreground, #253230);
    background-color: transparent;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .discover-workshops-btn:hover {
    background-color: var(--color-foreground, #253230);
    color: white;
    transform: translateX(2px);
  }

  .discover-workshops-btn svg {
    transition: transform 0.3s ease;
  }

  .discover-workshops-btn:hover svg {
    transform: translateX(3px);
  }

  .media-gallery-with-product-wrapper {
    position: relative;
    display: -webkit-flex;
    display: flex;
    flex-direction: column;
    -webkit-flex-direction: column;
    width: 100%;
    overflow: hidden;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }

  @media (max-width: 767px) {
    .media-gallery-with-product-wrapper {
      padding-left: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
      padding-right: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
    }
  }

  /* Product Info Section */
  .product-info-section {
    margin-bottom: 30px;
    text-align: center;
  }

  .product-title {
    font-family: var(--font-heading--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    font-size: 2.5em;
    font-weight: 700;
    color: var(--color-foreground, #333);
    margin: 0 0 15px 0;
    line-height: 1.2;
    letter-spacing: -0.02em;
  }



  .price {
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    font-size: 1.5em;
    font-weight: 600;
    color: var(--color-foreground, #333);
    line-height: 1.3;
  }

  .compare-price {
    font-size: 1.2em;
    color: #999;
    text-decoration: line-through;
    margin-left: 10px;
  }

  /* Product Form Section */
  .product-form-section {
    max-width: 400px;
    margin: 0 auto;
  }

  .quantity-selector {
    text-align: center;
  }

  .quantity-selector label {
    display: block;
    margin-bottom: 8px;
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    font-weight: 600;
    color: var(--color-foreground, #333);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 0.9rem;
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .quantity-btn {
    width: 40px;
    height: 40px;
    border: 2px solid #ddd;
    background: white;
    border-radius: 8px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .quantity-btn:hover {
    border-color: #333;
    background: #f5f5f5;
  }

  .quantity-input {
    width: 60px;
    height: 40px;
    border: 2px solid #ddd;
    border-radius: 8px;
    text-align: center;
    font-size: 16px;
    font-weight: 600;
  }

  .product-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .add-to-cart-btn,
  .buy-it-now-btn {
    width: 100%;
    padding: 15px 20px;
    border: none;
    border-radius: 12px;
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .add-to-cart-btn {
    background-color: #ffd814;
    color: #000;
  }

  .add-to-cart-btn:hover {
    background-color: #f7ca00;
  }

  .add-to-cart-btn:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }

  .buy-it-now-btn {
    background-color: #ffa41c;
    color: #000;
  }

  .buy-it-now-btn:hover {
    background-color: #ff8c00;
  }

  .loading-spinner {
    display: none;
    width: 20px;
    height: 20px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
  }

  @keyframes spin {
    0% { transform: translateY(-50%) rotate(0deg); }
    100% { transform: translateY(-50%) rotate(360deg); }
  }

  /* Inline Product Layout */
  .product-info-inline {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 20px;
    margin-top: 20px;
  }

  .product-info-inline .product-title {
    font-size: 1.8em;
    font-weight: 700;
    margin: 0;
    flex: 1 1 auto;
    text-align: left;
  }
  
  .product-info-inline .product-actions-group {
    flex-shrink: 0;
  }

  .product-info-inline .product-form {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 12px;
  }

  .product-info-inline .product-price {
    display: none;
  }

  /* Modern Flat Quantity Selector */
  .product-info-inline .quantity-selector {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .product-info-inline .quantity-selector label {
    margin: 0;
    white-space: nowrap;
    font-size: 14px;
    font-weight: 500;
    color: #6c757d;
  }

  .product-info-inline .quantity-controls {
    display: flex;
    align-items: center;
    background: #fff;
    border-radius: 8px;
    padding: 6px;
    border: 1px solid #dee2e6;
    box-shadow: 0 2px 4px rgba(0,0,0,0.04);
  }

  .product-info-inline .quantity-btn {
    width: 28px;
    height: 28px;
    border: none;
    background: transparent;
    font-size: 18px;
    font-weight: 400;
    line-height: 1;
    cursor: pointer;
    transition: background-color 0.2s ease;
    color: #495057;
  }

  .product-info-inline .quantity-btn:hover {
    background: #f1f3f5;
    border-radius: 6px;
  }

  .product-info-inline .quantity-input {
    width: 25px;
    border: none;
    background: transparent;
    text-align: center;
    font-size: 15px;
    font-weight: 600;
    color: #212529;
    outline: none;
    -moz-appearance: textfield;
  }

  .product-info-inline .quantity-input::-webkit-outer-spin-button,
  .product-info-inline .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Modern Flat Button */
  .product-info-inline .product-buttons {
    margin: 0;
  }

  .product-info-inline .add-to-cart-btn {
    padding: 14px 28px;
    font-family: var(--font-body--family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
    font-size: 15px;
    border-radius: 10px;
    border: none;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.2s ease;
    background-color: #FFD814;
    color: #0F1111;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .product-info-inline .add-to-cart-btn:hover {
    background-color: #F7CA00;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  .product-info-inline .buy-it-now-btn {
    display: none;
  }

  .product-info-inline .add-to-cart-btn:disabled {
    background: #e9ecef;
    color: #adb5bd;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Gallery Section */
  .gallery-section {
    position: relative;
    display: -webkit-flex;
    display: flex;
    align-items: center;
    -webkit-align-items: center;
    width: 100%;
    overflow: hidden;
    flex-direction: column;
    -webkit-flex-direction: column;
    margin-left: 0;
    min-height: 200px;
  }

  .gallery-section.with-overlay {
    position: relative;
  }

  /* Overlay Product Info */
  .product-overlay {
    position: absolute;
    top: 20px;
    left: 20px;
    right: 20px;
    background: rgba(255, 255, 255, 0.95);
    padding: 20px;
    border-radius: 16px;
    backdrop-filter: blur(10px);
    z-index: 10;
  }

  .product-overlay .product-title {
    font-size: 1.8em;
    margin-bottom: 10px;
  }

  .product-overlay .product-price {
    margin-bottom: 15px;
  }

  .product-overlay .product-form-section {
    max-width: none;
  }

  .product-overlay .quantity-selector {
    margin-bottom: 15px;
  }

  .product-overlay .product-buttons {
    flex-direction: row;
    gap: 10px;
  }

  .product-overlay .add-to-cart-btn,
  .product-overlay .buy-it-now-btn {
    flex: 1;
    padding: 12px 16px;
    font-size: 14px;
  }

  /* Gallery Navigation - Simple positioning on container */
  .gallery-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    padding: 12px 16px;
    font-size: 18px;
    cursor: pointer;
    z-index: 888;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .gallery-nav:hover {
    background: rgba(0, 0, 0, 0.9);
    transform: translateY(-50%) scale(1.1);
  }

  .gallery-nav.prev {
    left: 15px;
  }

  .gallery-nav.next {
    right: 15px;
  }

  /* Ensure navigation arrows are visible for vertical layout */
  .media-gallery-container[data-orientation="vertical"] ~ .gallery-nav {
    display: flex !important;
  }

  .media-gallery-container[data-orientation="vertical"] ~ .gallery-nav.prev {
    left: 0;
  }

  .media-gallery-container[data-orientation="vertical"] ~ .gallery-nav.next {
    right: 0;
  }

  /* Hide navigation when 5 or fewer images */
  .gallery-nav.hidden,
  .desktop-pagination-controls.hidden {
    display: none !important;
  }

  /* Gallery Container */
  .media-gallery-container {
    width: 100%;
    height: auto;
    min-height: 200px;
    padding: 10px;
    margin: 10px auto 15px auto;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    overflow-y: hidden;
    overflow-x: hidden;
    max-width: 100%;
  }

  /* Desktop pagination controls */
  .desktop-pagination-controls {
    display: none;
    justify-content: center;
    align-items: center;
    margin-top: 15px;
  }

  /* Mobile layout (default) */
  @media (max-width: 767px) {
    .media-gallery-container {
      display: -webkit-flex;
      display: flex;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      -ms-overflow-style: none;
      scroll-snap-type: x mandatory;
      -webkit-scroll-snap-type: x mandatory;
      padding: {{ section.settings.mobile_side_padding | default: 20 }}px;
      gap: 10px;
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      -webkit-box-sizing: border-box;
      min-height: 200px;
      height: auto;
    }

    .media-gallery-container::-webkit-scrollbar {
      display: none;
    }

    .media-gallery-image-block {
      position: relative;
      flex: 0 0 calc(50vw - 20px);
      height: calc((50vw - 20px) * 0.35);
      min-height: 60px;
      scroll-snap-align: start;
      -webkit-scroll-snap-align: start;
      aspect-ratio: 1/0.35;
      overflow: hidden;
      border-radius: 15px;
      display: block !important;
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
    }

    /* Mobile column variations */
    .media-gallery-container[data-mobile-columns="1"] .media-gallery-image-block {
      flex: 0 0 calc(100vw - 40px);
      height: calc((100vw - 40px) * 0.35);
    }

    .media-gallery-container[data-mobile-columns="3"] .media-gallery-image-block {
      flex: 0 0 calc(33.333vw - 15px);
      height: calc((33.333vw - 15px) * 0.35);
    }

    /* Video blocks on mobile - same size as other images */
    .video-block {
      aspect-ratio: 1/0.35 !important;
    }

    /* Mobile orientation overrides */
    .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block {
      aspect-ratio: 9/16 !important;
      height: calc(50vw * 0.625) !important;
    }

    .media-gallery-container[data-orientation="horizontal"] .media-gallery-image-block {
      aspect-ratio: 16/9 !important;
      height: calc(50vw * 0.2) !important;
    }

    .media-gallery-container[data-orientation="square"] .media-gallery-image-block {
      aspect-ratio: 1/0.35 !important;
      height: calc((50vw - 15px) * 0.35) !important;
    }

    .product-overlay {
      position: relative;
      top: auto;
      left: auto;
      right: auto;
      margin-top: 20px;
    }

    .product-overlay .product-buttons {
      flex-direction: column;
    }

    /* Mobile inline layout */
    .product-info-inline {
      flex-direction: column;
      gap: 15px;
      text-align: center;
    }

    .product-info-inline .product-title {
      font-size: 1.5em;
      min-width: auto;
    }

    .product-info-inline .quantity-selector {
      justify-content: center;
    }

    .product-info-inline .product-buttons {
      flex-direction: column;
      width: 100%;
    }

    .product-info-inline .add-to-cart-btn,
    .product-info-inline .buy-it-now-btn {
      width: 100%;
      padding: 15px 20px;
      font-size: 16px;
    }
  }

  /* Desktop layout */
  @media (min-width: 768px) {
    .gallery-section {
      flex-direction: column;
    }
    
    .media-gallery-container {
      display: grid;
      grid-gap: 15px;
      height: 450px;
      overflow: hidden;
      white-space: normal;
      width: 100%;
      max-width: 100%;
    }

    /* Dynamic grid columns based on setting */
    .media-gallery-container[data-desktop-columns="2"] {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }

    .media-gallery-container[data-desktop-columns="3"] {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }

    .media-gallery-container[data-desktop-columns="4"] {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }

    .media-gallery-container[data-desktop-columns="5"] {
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }

      .media-gallery-image-block {
    position: relative;
    height: 100%;
    width: 100%;
    margin-right: 0;
    display: none;
    overflow: hidden;
    border-radius: 15px;
    box-sizing: border-box;
  }

    /* Show first 5 images by default */
    .media-gallery-image-block[data-index="0"],
    .media-gallery-image-block[data-index="1"],
    .media-gallery-image-block[data-index="2"],
    .media-gallery-image-block[data-index="3"],
    .media-gallery-image-block[data-index="4"] {
      display: block;
    }

    .featured-image {
      grid-column: 1 / 3;
      grid-row: 1 / 3;
    }

    /* Video blocks - same size as other images */
    .video-block {
      height: 100% !important;
      width: 100% !important;
    }

    .video-block.featured-image {
      grid-column: 1 / 3;
      grid-row: 1 / 3;
    }
  }

  /* Image orientation styles - these override grid constraints */
  .media-gallery-image-block img {
    display: block;
    height: 100%;
    width: 100%;
    object-fit: cover;
    -webkit-object-fit: cover;
    border-radius: 15px;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    -webkit-transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    cursor: pointer;
    filter: brightness(1);
    transform-origin: center;
    -webkit-transform-origin: center;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /* Auto orientation - based on image dimensions */
  .media-gallery-container[data-orientation="auto"] .media-gallery-image-block img {
    object-fit: cover;
  }

  /* Vertical orientation - Instagram style - OVERRIDE GRID */
  .media-gallery-container[data-orientation="vertical"] {
    display: -webkit-flex !important;
    display: flex !important;
    flex-wrap: nowrap !important;
    -webkit-flex-wrap: nowrap !important;
    overflow-x: auto !important;
    -webkit-overflow-scrolling: touch !important;
    grid-template-columns: none !important;
    grid-template-rows: none !important;
    height: 450px !important; /* Fixed height instead of 100% */
    max-height: 450px !important;
    min-height: 450px !important;
    gap: 15px !important;
    padding: 0 !important;
    align-items: center !important;
    -webkit-align-items: center !important;
    width: 100% !important;
    max-width: 100% !important;
  }

  .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block {
    height: 450px !important;
    max-height: 450px !important;
    min-height: 450px !important;
    width: auto !important;
    flex: 0 0 auto !important;
    -webkit-flex: 0 0 auto !important;
    display: block !important;
    margin: 0 !important;
    position: relative !important;
    overflow: hidden !important;
    min-width: 0 !important;
    -webkit-transform: translateZ(0) !important;
    transform: translateZ(0) !important;
  }

  /* MOBILE OVERRIDE: Make vertical orientation 300px height and 90% page width */
  @media (max-width: 767px) {
    .media-gallery-container[data-orientation="vertical"] {
      height: 300px !important; /* Adjusted height */
      max-height: 300px !important;
      min-height: 300px !important;
    }

    .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block {
      height: 300px !important; /* Adjusted height */
      max-height: 300px !important;
      min-height: 300px !important;
      width: 90vw !important; /* 90% of viewport width */
      min-width: 90vw !important;
      flex: 0 0 90vw !important; /* Responsive width */
      -webkit-flex: 0 0 90vw !important;
    }
  }

  .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block.featured-image {
    grid-column: auto !important;
    grid-row: auto !important;
  }

  .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block img {
    height: 450px !important;
    max-height: 450px !important;
    min-height: 450px !important;
    width: auto !important;
    object-fit: contain !important;
    -webkit-object-fit: contain !important;
    position: relative !important;
    max-width: none !important;
    -webkit-backface-visibility: hidden !important;
    backface-visibility: hidden !important;
  }

  /* MOBILE OVERRIDE: Make vertical orientation images 300px height and 90% page width */
  @media (max-width: 767px) {
    .media-gallery-container[data-orientation="vertical"] .media-gallery-image-block img {
      height: 300px !important; /* Adjusted height */
      max-height: 300px !important;
      min-height: 300px !important;
      width: 90vw !important; /* 90% of viewport width */
      min-width: 90vw !important;
      object-fit: cover !important; /* Crop to fill container */
      -webkit-object-fit: cover !important;
    }
  }

  /* Special handling for videos to maintain aspect ratio */
  .media-gallery-container[data-orientation="vertical"] .media-gallery-video-container {
    height: 100% !important;
    max-height: 450px !important;
    width: auto !important;
    position: relative !important;
    overflow: hidden !important;
  }

  .media-gallery-container[data-orientation="vertical"] .media-gallery-video,
  .media-gallery-container[data-orientation="vertical"] .media-gallery-external-video {
    height: 100% !important;
    max-height: 450px !important;
    width: auto !important;
    object-fit: contain !important;
  }

  /* Make video blocks same size as image blocks */
  .media-gallery-container[data-orientation="vertical"] .video-block {
    height: 100% !important;
    max-height: 450px !important;
    width: auto !important;
  }

  /* MOBILE OVERRIDE: Make vertical orientation videos 300px height and 90% page width */
  @media (max-width: 767px) {
    .media-gallery-container[data-orientation="vertical"] .media-gallery-video-container {
      max-height: 300px !important; /* Adjusted height */
      width: 90vw !important; /* 90% of viewport width */
      min-width: 90vw !important;
    }

    .media-gallery-container[data-orientation="vertical"] .media-gallery-video,
    .media-gallery-container[data-orientation="vertical"] .media-gallery-external-video {
      max-height: 300px !important; /* Adjusted height */
      width: 90vw !important; /* 90% of viewport width */
      min-width: 90vw !important;
      object-fit: cover !important; /* Crop to fill container */
    }

    .media-gallery-container[data-orientation="vertical"] .video-block {
      max-height: 300px !important; /* Adjusted height */
      width: 90vw !important; /* 90% of viewport width */
      min-width: 90vw !important;
    }
  }

  /* Hide scrollbar but keep functionality */
  .media-gallery-container[data-orientation="vertical"]::-webkit-scrollbar {
    display: none;
  }
  
  .media-gallery-container[data-orientation="vertical"] {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  /* Horizontal orientation - OVERRIDE GRID */
  .media-gallery-container[data-orientation="horizontal"] .media-gallery-image-block {
    aspect-ratio: 16/9 !important;
    height: auto !important;
    max-height: 253px !important;
    width: 100% !important;
  }

  .media-gallery-container[data-orientation="horizontal"] .media-gallery-image-block img {
    object-fit: cover;
    height: 100% !important;
    width: 100% !important;
  }

  /* Square orientation - OVERRIDE GRID */
  .media-gallery-container[data-orientation="square"] .media-gallery-image-block {
    aspect-ratio: 1/1 !important;
    height: auto !important;
    max-height: 300px !important;
    width: auto !important;
    max-width: 300px !important;
    margin: 0 auto !important;
  }

  .media-gallery-container[data-orientation="square"] .media-gallery-image-block img {
    object-fit: cover;
    height: 100% !important;
    width: 100% !important;
  }

  /* Featured image orientation overrides */
  .media-gallery-container[data-orientation="vertical"] .featured-image {
    height: 100% !important;
    width: auto !important;
  }

  .media-gallery-container[data-orientation="horizontal"] .featured-image {
    max-height: 225px !important;
    width: 100% !important;
  }

  .media-gallery-container[data-orientation="square"] .featured-image {
    max-height: 450px !important;
    max-width: 450px !important;
  }

  .media-gallery-image-block:hover img {
    transform: scale(1.015) translateY(-2px);
    filter: brightness(1.03);
  }

  /* Video Styles */
  .media-gallery-video-container {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 15px;
    overflow: hidden;
  }

  .media-gallery-video,
  .media-gallery-external-video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 15px;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    cursor: pointer;
  }

  /* Videos match other image sizes */
  .video-block .media-gallery-video,
  .video-block .media-gallery-external-video {
    object-fit: cover;
  }

  .media-gallery-image-block:hover .media-gallery-video,
  .media-gallery-image-block:hover .media-gallery-external-video {
    transform: scale(1.015) translateY(-2px);
  }

  .video-play-pause-overlay {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.8;
    z-index: 10;
  }

  .video-play-pause-overlay:hover {
    opacity: 1;
    background: rgba(0, 0, 0, 0.9);
    transform: scale(1.1);
  }

  .play-pause-icon {
    font-size: 16px;
    color: white;
    line-height: 1;
  }

  /* Caption Overlay */
  .media-gallery-caption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 10px;
    font-size: 14px;
    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .media-gallery-image-block:hover .media-gallery-caption {
    opacity: 1;
  }

  /* Modal Styles */
  .media-gallery-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .media-gallery-close-modal {
    position: absolute;
    top: 20px;
    right: 30px;
    color: white;
    font-size: 40px;
    cursor: pointer;
    z-index: 10000;
  }

  .media-gallery-modal-image-container {
    max-width: 90vw;
    max-height: 90vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .media-gallery-modal-image-container img {
    max-width: 100%;
    max-height: 90vh;
    width: auto;
    height: auto;
    object-fit: contain;
    border-radius: 10px;
  }

  #media-gallery-modal-caption {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    color: white;
    text-align: center;
    max-width: 80%;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .media-gallery-container {
      padding: 0;
    }
  }

  /* Fallback styling */
  .no-product-selected {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 200px;
    background-color: #f8f9fa;
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    color: #6c757d;
    font-size: 1rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productId = '{{ product.id }}';
    const sectionId = '{{ section.id }}';
    const productForm = document.querySelector(`#product-form-${productId}-${sectionId}`);
    const variantIdInput = document.querySelector('input[name="id"][data-product-form-variant]');
    const addToCartBtn = document.querySelector('.add-to-cart-btn');
    const buyItNowBtn = document.querySelector('.buy-it-now-btn');
    
    // Quantity controls
    window.updateQuantity = function(change) {
      const quantityInput = document.querySelector('.quantity-input');
      const currentValue = parseInt(quantityInput.value);
      const newValue = Math.max(1, currentValue + change);
      quantityInput.value = newValue;
    };
    
    // Handle form submission for Add to Cart
    if (productForm) {
      productForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const variantId = variantIdInput.value;
        const quantity = document.querySelector('.quantity-input')?.value || 1;
        
        if (addToCartBtn) {
          const spinner = addToCartBtn.querySelector('.loading-spinner');
          const buttonText = addToCartBtn.querySelector('[data-button-text]');
          
          spinner.style.display = 'inline-block';
          addToCartBtn.disabled = true;
          
          // Add to cart using fetch API
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              items: [{
                id: variantId,
                quantity: parseInt(quantity)
              }]
            })
          })
          .then(response => response.json())
          .then(data => {
            spinner.style.display = 'none';
            addToCartBtn.disabled = false;
            
            // Show success message or update cart
            console.log('Added to cart:', data);
            
            // Trigger cart update event
            document.dispatchEvent(new CustomEvent('cart:updated', { detail: data }));
          })
          .catch(error => {
            spinner.style.display = 'none';
            addToCartBtn.disabled = false;
            console.error('Error adding to cart:', error);
          });
        }
      });
    }
    
    // Handle Buy It Now button
    if (buyItNowBtn) {
      buyItNowBtn.addEventListener('click', function() {
        const variantId = this.getAttribute('data-variant-id');
        const quantity = document.querySelector('.quantity-input')?.value || 1;
        
        // Redirect to checkout
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/cart/add';
        
        const variantInput = document.createElement('input');
        variantInput.type = 'hidden';
        variantInput.name = 'id';
        variantInput.value = variantId;
        
        const quantityInput = document.createElement('input');
        quantityInput.type = 'hidden';
        quantityInput.name = 'quantity';
        quantityInput.value = quantity;
        
        const checkoutInput = document.createElement('input');
        checkoutInput.type = 'hidden';
        checkoutInput.name = 'return_to';
        checkoutInput.value = '/checkout';
        
        form.appendChild(variantInput);
        form.appendChild(quantityInput);
        form.appendChild(checkoutInput);
        
        document.body.appendChild(form);
        form.submit();
      });
    }
    
    // Gallery functionality with new features
    let currentIndex = 0;
    const images = document.querySelectorAll('.media-gallery-image-block');
    const totalImages = images.length;
    const container = document.querySelector('.media-gallery-container');
    const desktopColumns = parseInt(container.dataset.desktopColumns) || 4;
    const mobileColumns = parseInt(container.dataset.mobileColumns) || 2;
    const orientation = container.dataset.orientation || 'auto';
    
    // Handle desktop layout for dynamic columns
    if (totalImages <= desktopColumns * 2) {
      // Show all images on desktop when they fit in the grid
      images.forEach((img, index) => {
        if (index < desktopColumns * 2) {
          img.style.display = 'block';
        }
      });
    }
    
    // Navigation functions
    function goToPage(pageIndex) {
      const startIndex = pageIndex * (desktopColumns * 2);
      const endIndex = Math.min(startIndex + (desktopColumns * 2), totalImages);
      
      // Hide all images
      images.forEach(img => img.style.display = 'none');
      
      // Show images for current page
      for (let i = startIndex; i < endIndex; i++) {
        if (images[i]) {
          images[i].style.display = 'block';
        }
      }
      
      currentIndex = pageIndex;
    }
    
    // Gallery navigation (works for both mobile and desktop)
    const prevBtn = document.querySelector('.gallery-nav.prev');
    const nextBtn = document.querySelector('.gallery-nav.next');
    
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        const orientation = container.dataset.orientation;
        const isVertical = orientation === 'vertical';
        const isDesktop = window.innerWidth >= 768;
        
        if (isVertical || !isDesktop) {
          // For vertical (Instagram) layout or mobile: Use smooth scroll
          const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width
          container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
        } else if (isDesktop && totalImages > desktopColumns * 2) {
          // For other layouts on desktop: Use pagination logic
          if (currentIndex > 0) {
            goToPage(currentIndex - 1);
          }
        }
      });
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        const orientation = container.dataset.orientation;
        const isVertical = orientation === 'vertical';
        const isDesktop = window.innerWidth >= 768;
        
        if (isVertical || !isDesktop) {
          // For vertical (Instagram) layout or mobile: Use smooth scroll
          const scrollAmount = container.clientWidth * 0.8; // Scroll 80% of container width
          container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
        } else if (isDesktop && totalImages > desktopColumns * 2) {
          // For other layouts on desktop: Use pagination logic
          if (currentIndex < Math.ceil(totalImages / (desktopColumns * 2)) - 1) {
            goToPage(currentIndex + 1);
          }
        }
      });
    }
    
    // Auto-orientation detection for images (skip videos)
    if (orientation === 'auto') {
      images.forEach(img => {
        // Skip video blocks for auto-orientation
        if (img.classList.contains('video-block')) {
          return;
        }
        
        const imageElement = img.querySelector('img');
        if (imageElement) {
          const originalWidth = parseInt(imageElement.dataset.originalWidth);
          const originalHeight = parseInt(imageElement.dataset.originalHeight);
          
          if (originalWidth && originalHeight) {
            const aspectRatio = originalWidth / originalHeight;
            
            // Only apply aspect ratio if it's significantly different from square
            if (aspectRatio > 1.5) {
              // Very horizontal image - keep it contained
              img.style.objectFit = 'cover';
            } else if (aspectRatio < 0.7) {
              // Very vertical image - keep it contained
              img.style.objectFit = 'cover';
            } else {
              // Square-ish image - let it fill naturally
              img.style.objectFit = 'cover';
            }
          }
        }
      });
    }
    
    // Modal functionality
    const modal = document.getElementById('media-gallery-modal');
    const modalImageContainer = document.querySelector('.media-gallery-modal-image-container');
    const modalCaption = document.getElementById('media-gallery-modal-caption');
    const closeModal = document.querySelector('.media-gallery-close-modal');
    
    // Open modal
    document.querySelectorAll('.media-gallery-open-modal').forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const imageUrl = this.getAttribute('data-image-url');
        const caption = this.getAttribute('data-caption');
        
        modalImageContainer.innerHTML = `<img src="${imageUrl}" alt="Modal Image">`;
        modalCaption.textContent = caption || '';
        modal.style.display = 'flex';
      });
    });
    
    // Close modal
    if (closeModal) {
      closeModal.addEventListener('click', () => {
        modal.style.display = 'none';
      });
    }
    
    // Close modal on background click
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        this.style.display = 'none';
      }
    });
    
    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.style.display === 'flex') {
        modal.style.display = 'none';
      }
    });
    
    // Auto-start all videos when page loads and ensure they keep playing
    function startAllVideos() {
      const videos = document.querySelectorAll('.media-gallery-video');
      videos.forEach(video => {
        // Ensure video is muted for autoplay
        video.muted = true;
        video.loop = true;
        video.playsInline = true;
        
        // Start playing
        video.play().catch(e => {
          console.log('Autoplay prevented for video:', e);
        });
        
        // Ensure video keeps playing if it gets paused
        video.addEventListener('pause', function() {
          if (!video.ended) {
            video.play().catch(e => {
              console.log('Failed to resume video:', e);
            });
          }
        });
      });
    }
    
    // Start videos immediately and after a delay
    startAllVideos();
    setTimeout(startAllVideos, 500);
    setTimeout(startAllVideos, 1000);
  });

  // Video Control Functions
  function toggleVideoPlayback(overlay) {
    const videoContainer = overlay.parentElement;
    const video = videoContainer.querySelector('.media-gallery-video');
    const icon = overlay.querySelector('.play-pause-icon');
    
    if (video) {
      if (video.paused) {
        video.play();
        icon.textContent = '⏸️';
      } else {
        video.pause();
        icon.textContent = '▶️';
      }
    }
  }
  
  function toggleExternalVideoPlayback(overlay) {
    const videoContainer = overlay.parentElement;
    const iframe = videoContainer.querySelector('iframe');
    const icon = overlay.querySelector('.play-pause-icon');
    
    if (iframe) {
      // For external videos (YouTube, Vimeo), we need to use their APIs
      // This is a basic implementation - more complex for full control
      const src = iframe.src;
      if (src.includes('autoplay=1')) {
        iframe.src = src.replace('autoplay=1', 'autoplay=0');
        icon.textContent = '▶️';
      } else {
        iframe.src = src.includes('?') ? src + '&autoplay=1' : src + '?autoplay=1';
        icon.textContent = '⏸️';
      }
    }
  }
</script> 