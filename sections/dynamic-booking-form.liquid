{% comment %}
  Dynamic Booking Form Section
  Pulls event data from Shopify Metaobjects instead of hardcoded section settings
{% endcomment %}

{%- liquid
  assign selected_variant = product.selected_or_first_available_variant
  assign available = selected_variant.available
  assign product_form_id = 'product-form-' | append: product.id | append: '-' | append: section.id
  assign add_to_cart_label = 'product.store_front.add_to_cart' | t
  assign sold_out_label = 'product.store_front.sold_out' | t
-%}

<!-- Get event handle from product metafield or section settings -->
{% assign event_handle = product.metafields.custom.event_handle | default: section.settings.event_handle %}

<!-- Load event data from metaobject -->
{% if event_handle != blank %}
  {% assign event = shop.metaobjects.event[event_handle] %}
{% endif %}

<!-- Location-based event detection for Hawaii and New York visitors -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Check if location detection is enabled for this section
  {% if section.settings.enable_location_detection != false %}
  // Check if visitor is from a supported local area
  if (window.isLocalVisitor && window.isLocalVisitor()) {
    const currentUrl = window.location.href;
    const locationConfig = window.getLocationConfig();
    
    // Don't redirect on location-specific pages
    const isLocationSpecificPage = currentUrl.includes('/collections/honolulu') || 
                                  currentUrl.includes('/collections/new-york') ||
                                  currentUrl.includes('/pages/craft-classes-in-honolulu') ||
                                  currentUrl.includes('/pages/new-york-workshops');
    
        // REMOVED: Automatic redirect logic (Google policy violation)
    // Now showing suggestion banner only - no automatic redirects
    console.log('Showing location suggestion for:', locationConfig.collectionUrl);
    
    // Redirect Hawaii visitors to Honolulu collection on generic workshop pages (only once)
    if (isGenericWorkshopPage && !isLocationSpecificPage && locationConfig.name === 'Hawaii' && !hasBeenRedirected) {
      // Mark as redirected
      sessionStorage.setItem('kraftstories_hawaii_redirected', 'true');
      
      // Show a brief message before redirecting
      const redirectMessage = document.createElement('div');
      redirectMessage.className = 'local-visitor-redirect';
      redirectMessage.innerHTML = `
        <div style="background: linear-gradient(135deg, #FF6B35, #F7931E); color: white; padding: 18px 20px; text-align: center; border-radius: 12px; margin: 15px auto; box-shadow: 0 4px 20px rgba(255, 107, 53, 0.25); border: 1px solid rgba(255, 255, 255, 0.2); position: relative; overflow: hidden; max-width: 600px; width: 90%;">
          <div style="position: absolute; top: -50%; left: -50%; width: 200%; height: 200%; background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%); animation: shimmer 2s infinite;"></div>
          <div style="display: flex; align-items: center; justify-content: center; gap: 15px; flex-wrap: wrap; position: relative; z-index: 1;">
            <div style="background: rgba(255,255,255,0.2); border-radius: 50%; padding: 10px; backdrop-filter: blur(10px);">
              <span style="font-size: 28px;">🌺</span>
            </div>
            <div style="flex: 1; min-width: 200px;">
              <h3 style="margin: 0 0 8px 0; font-size: 1.2em; font-weight: 700; color: white; text-shadow: 0 1px 3px rgba(0,0,0,0.2);">Aloha from Hawaii!</h3>
              <p style="margin: 0 0 12px 0; font-size: 0.95em; color: white; opacity: 0.95; line-height: 1.4;">We detected you're in Hawaii! Check out our in-person Honolulu studio workshops happening near you.</p>
              <a href="${locationConfig.collectionUrl}" style="display: inline-block; background: rgba(255,255,255,0.9); color: #FF6B35; padding: 8px 16px; border-radius: 6px; text-decoration: none; font-weight: 600; margin-top: 8px; transition: all 0.2s ease;">View Honolulu Workshops →</a>
            </div>
          </div>
        </div>
        <style>
          @keyframes shimmer {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
          @keyframes progress {
            0% { width: 100%; }
            100% { width: 0%; }
          }
          .local-visitor-redirect {
            animation: slideIn 0.5s ease-out;
          }
          @keyframes slideIn {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
          }
        </style>
      `;
      
      const bookingForm = document.querySelector('.booking-form-container');
      if (bookingForm) {
        bookingForm.parentNode.insertBefore(redirectMessage, bookingForm);
      }
      
      // REMOVED: Automatic redirect (Google policy violation)
      // Now showing suggestion banner only - no automatic redirects
      console.log('Showing Hawaii location suggestion for:', locationConfig.collectionUrl);
      
      if (typeof gtag === 'function') {
        gtag('event', 'location_suggestion_shown', {
          event_category: 'engagement',
          event_label: 'hawaii_suggestion',
          page_location: window.location.href,
          suggested_location: locationConfig.collectionUrl
        });
      }
    }
    // Show persistent banner for Hawaii visitors who have already been redirected
    else if (isGenericWorkshopPage && !isLocationSpecificPage && locationConfig.name === 'Hawaii' && hasBeenRedirected) {
      const recommendationBanner = document.createElement('div');
      recommendationBanner.className = 'local-visitor-recommendation';
      recommendationBanner.innerHTML = `
        <div style="background: linear-gradient(135deg, #FF6B35, #F7931E); color: white; padding: 15px 20px; text-align: center; border-radius: 12px; margin: 15px auto; box-shadow: 0 4px 20px rgba(255, 107, 53, 0.25); border: 1px solid rgba(255, 255, 255, 0.2); position: relative; overflow: hidden; max-width: 600px; width: 90%;">
          <div style="position: absolute; top: -50%; left: -50%; width: 200%; height: 200%; background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%); animation: shimmer 3s infinite;"></div>
          <div style="display: flex; align-items: center; justify-content: center; gap: 15px; flex-wrap: wrap; position: relative; z-index: 1;">
            <div style="background: rgba(255,255,255,0.2); border-radius: 50%; padding: 8px; backdrop-filter: blur(10px);">
              <span style="font-size: 24px;">🌺</span>
            </div>
            <div style="flex: 1; min-width: 200px;">
              <h3 style="margin: 0 0 6px 0; font-size: 1.1em; font-weight: 700; color: white; text-shadow: 0 1px 3px rgba(0,0,0,0.2);">Aloha from Hawaii!</h3>
              <p style="margin: 0 0 12px 0; font-size: 0.9em; color: white; opacity: 0.95; line-height: 1.4;">Check out our Honolulu studio events for a local experience!</p>
            </div>
            <a href="${locationConfig.collectionUrl}" style="background: white; color: #FF6B35; padding: 10px 20px; border-radius: 20px; text-decoration: none; font-weight: bold; font-size: 13px; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.1); white-space: nowrap;">View Honolulu Events</a>
          </div>
        </div>
        <style>
          @keyframes shimmer {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
          .local-visitor-recommendation {
            animation: slideIn 0.5s ease-out;
          }
          @keyframes slideIn {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
          }
        </style>
      `;
      
      const bookingForm = document.querySelector('.booking-form-container');
      if (bookingForm) {
        bookingForm.parentNode.insertBefore(recommendationBanner, bookingForm);
      }
      
      if (typeof gtag === 'function') {
        gtag('event', 'location_banner_view', {
          event_category: 'engagement',
          event_label: 'hawaii_persistent_banner',
          page_location: window.location.href
        });
      }
    }
    // For New York visitors, show banner instead of redirect
    else if (isGenericWorkshopPage && !isLocationSpecificPage && locationConfig.name === 'New York') {
      const recommendationBanner = document.createElement('div');
      recommendationBanner.className = 'local-visitor-recommendation';
      recommendationBanner.innerHTML = `
        <div style="background: linear-gradient(135deg, #4A90E2, #357ABD); color: white; padding: 20px; border-radius: 12px; margin: 20px 0; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
          <div style="display: flex; align-items: center; justify-content: center; gap: 15px; flex-wrap: wrap;">
            <span style="font-size: 28px;">🗽</span>
            <div>
              <h3 style="margin: 0 0 8px 0; font-size: 1.2em;">Welcome from New York!</h3>
              <p style="margin: 0 0 15px 0; font-size: 0.9em;">We detected you're in New York. Check out our local studio events!</p>
            </div>
            <a href="${locationConfig.collectionUrl}" style="background: white; color: #4A90E2; padding: 10px 20px; border-radius: 25px; text-decoration: none; font-weight: bold; font-size: 14px; transition: all 0.3s ease;">View New York Events</a>
          </div>
        </div>
      `;
      
      const bookingForm = document.querySelector('.booking-form-container');
      if (bookingForm) {
        bookingForm.parentNode.insertBefore(recommendationBanner, bookingForm);
      }
      
      if (typeof gtag === 'function') {
        gtag('event', 'local_visitor_recommendation', {
          event_category: 'engagement',
          event_label: `${locationConfig.name}_events`,
          page_location: window.location.href
        });
      }
    }
  }
  {% endif %}
});
</script>

{% assign color_scheme = section.settings.color_scheme %}

<style>
/* Exact styles copied from original booking-form.liquid */
.booking-form-container h2 {
  cursor: pointer !important;
}

.booking-form-content {
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  margin-top: 10px;
}

.booking-form-content.show {
  display: block;
  opacity: 1;
}

@media (max-width: 768px) {
  .booking__container {
    grid-template-columns: 1fr;
  }
}

.event-details h1 {
  font-size: 2em;
  font-weight: bold;
  color: #333;
}

.review-link {
  color: black;
  text-decoration: none;
  font-size: 1em;
  margin-left: 10px;
}

.event-description {
  font-size: 1em;
  color: #555;
  line-height: 1.6;
  margin-top: 5px;
}

.dynamic-sections h4 {
  font-size: 1.25em;
  font-weight: bold;
  color: #333;
  margin-top: 30px;
  margin-bottom: 8px;
  background-image: linear-gradient(to right, #ccc 50%, rgba(255, 255, 255, 0) 0%);
  background-position: top;
  padding-top: 30px;
  background-size: 10px 1px;
  background-repeat: repeat-x;
}

.dynamic-sections p, .dynamic-sections div {
  margin-bottom: 20px;
  color: #555;
  line-height: 1.6;
}

.event-highlights {
  display: flex;
  gap: 15px;
  margin: 15px 0;
}

.highlight {
  display: flex;
  align-items: center;
  font-size: 1em;
  color: #333;
}

.highlight .icon {
  margin-right: 5px;
}

.event-details-list p {
  font-size: 1em;
  color: #333;
  margin-top: 5px;
  margin-bottom: 20px;
}

.event-details p {
  margin: 25px 0;
}

.discount-info {
  color: #ff6a00;
  }

  .booking__container {
    display: grid;
    grid-template-columns: 2.5fr 1.1fr;
    gap: 20px 100px; /* 10px vertical (row) gap, 100px horizontal (column) gap */
  }

  /* Ensure container padding is applied */
  .booking__container.container {
    padding-left: var(--container-padding, 20px);
    padding-right: var(--container-padding, 20px);
  }

  .booking__container.container--with-aside-paddings {
    padding-left: var(--container-aside-padding, 40px);
    padding-right: var(--container-aside-padding, 40px);
  }

  @media (max-width: 768px) {
    .booking__container {
      grid-template-columns: 1fr;
      padding-left: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
      padding-right: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
    }
    
    .booking__container.container--with-aside-paddings {
      padding-left: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
      padding-right: {{ section.settings.mobile_side_padding | default: 20 }}px !important;
    }
  }

  .event-details h1 {
    font-size: 2em;
    font-weight: bold;
    color: #333;
  }

.event-rating {
  display: flex;
  align-items: center;
  font-size: 1em !important;
  color: #ff6a00;
  margin-top: 5px;
}

.star-rating {
  margin-right: 8px;
  }

  .event-description {
    font-size: 1em;
    color: #555;
    line-height: 1.6;
    margin-top: 5px;
  }

  .event-highlights {
    display: flex;
    gap: 15px;
    margin: 15px 0;
  }

  .highlight {
    display: flex;
    align-items: center;
    font-size: 1em;
    color: #333;
  }

  .highlight .icon {
    margin-right: 5px;
  }

  .event-details-list p {
    font-size: 1em;
    color: #333;
    margin-top: 5px;
    margin-bottom: 20px;
  }

.discount-info {
  color: #ff6a00;
  }

  .booking-form {
    background-color: #fff;
    padding: 24px;
    border-radius: 12px;
    border: 1px solid #e0e0e0;
    box-shadow: none;
    margin-bottom: 20px;
    width: 100%;
    max-width: 520px;
  }

  .booking-form.private {
    margin-top: 30px;
  }

#public_event_date {
  width: 100%;
}

.sticky-form {
  height: fit-content;
  }

  .price-section {
    margin-bottom: 15px;
  }

  .price-total-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .price-details {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .price-per-person, .total-price {
    font-size: 1em;
    font-weight: 500;
    color: #333;
    margin: 0;
    white-space: nowrap;
  }

.participant-select {
  text-align: left;
  }

  .participant-select select {
    padding: 8px;
    font-size: 1em;
    border: 1px solid #ccc;
    border-radius: 8px;
    text-align: left;
  }

.date-time-section {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 15px;
}

.date-container, .time-container {
  display: flex;
  flex-direction: column;
  align-items: start;
  flex: 1;
}

.date-container label, .time-container label {
  font-size: 0.875em;
  color: #333;
  margin-bottom: 5px;
}

.date-container input, .time-container select {
  width: 100%;
  padding: 8px;
  font-size: 1em;
  border: 1px solid #ccc;
  border-radius: 8px;
  }

  .request-booking-btn {
    width: 100%;
    padding: 12px;
    font-size: 1em;
    text-align: center;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    background: linear-gradient(90deg, #ff5f6d, #ffc371);
    color: #fff;
    font-weight: bold;
    margin-top: 20px;
  }

.no-charge-notice {
  font-size: 0.875em;
  color: #777;
  text-align: center;
  margin-top: 10px;
}

.booking-form [id$="_email_container"] {
  display: none;
  margin-top: 15px;
}

.booking-form [id$="_name"],
.booking-form [id$="_email"],
.booking-form [id$="_optional_message"] {
  width: 100%;
  padding: 10px;
  font-size: 1em;
  border: 1px solid #ccc;
  border-radius: 8px;
  margin-top: 10px;
}

.success-message {
  display: none;
  color: green;
  font-size: 1em;
  text-align: center;
  margin-top: 15px;
}

.booking-form [id$="_email_container"] button {
  width: 100%;
  padding: 12px;
  font-size: 1em;
  text-align: center;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  background: linear-gradient(90deg, #4CAF50, #81C784);
  color: #fff;
  font-weight: bold;
  margin-top: 20px;
}

.event-title-wrap {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.details-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10px;
  margin-top: 20px;
}

@media (min-width: 768px) {
  .details-container {
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
  }
}

@media (min-width: 1024px) {
  .details-container {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 15px;
  }
}

.detail-box {
  padding: 15px;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  text-align: left;
  width: 100%;
  box-sizing: border-box;
}

@media (max-width: 767px) {
  .detail-box {
    padding: 12px;
    font-size: 1.1em;
  }
}

.detail-label {
  font-size: 0.8em;
  color: #757575;
  margin-bottom: 5px;
}

.detail-value {
  font-size: 1em;
  font-weight: bold;
  color: #000;
}

/* Travel Information Styles */
.travel-info-box .detail-value {
  line-height: 1.4;
}

.travel-status {
  display: inline-block;
  font-weight: 600;
  margin-bottom: 4px;
}

.travel-status.travel-friendly {
  color: #2d5a2d;
}

.travel-status.travel-restricted {
  color: #8b2a2a;
}

.certificate-status {
  display: inline-block;
  color: #1e4a6b;
  font-weight: 500;
  margin-top: 4px;
}

.travel-notes {
  display: block;
  color: #666;
  font-size: 0.9em;
  font-weight: normal;
  font-style: italic;
  margin-top: 6px;
  line-height: 1.3;
}

@media (max-width: 767px) {
  .detail-label {
    font-size: 0.75em;
    margin-bottom: 4px;
  }
  
  .detail-value {
    font-size: 0.9em;
    line-height: 1.2;
  }
}

.contact-us-in-listing {
  display: flex;
  margin: auto;
  margin-top: 20px;
}

.new-badge {
  background-color: #DDF2D1;
  color: Green;
  padding: 0.3rem 0.7rem;
  border-radius: 15px;
  font-size: 0.75em;
}

.detail-label {
  font-size: 0.9em;
  margin-bottom: 5px;
}

.original-price {
  text-decoration: none;
  color: black;
  margin-right: 10px;
}

.discounted .original-price {
  text-decoration: line-through;
  color: #888;
}

.discounted-price {
  color: #28a745;
  font-weight: bold;
}

.discount-tag {
  color: #28a745;
  font-weight: bold;
  margin-left: 10px;
}

label[for$="_optional_message"] {
  margin-top: 20px;
  display: block;
  font-size: 1em;
}

label[for$="_email"] {
  margin-top: 20px;
  display: block;
  font-size: 1em;
}

.booking-title {
  font-size: 1.2em;
  color: #333;
  text-align: left;
}

.dynamic-sections h2 {
  font-size: 1.5em;
  font-weight: bold;
  margin-top: 40px;
  margin-bottom: 15px;
  color: #333;
}

.dynamic-sections p {
  margin-bottom: 20px;
  color: #555;
  line-height: 1.6;
}

.kit-content-image {
  max-width: 100%;
  margin-bottom: 5px;
  mix-blend-mode: darken;
  border-radius: 20px;
}

.event-type {
  display: inline-block;
  background-color: #4caf50;
  color: white;
  font-size: 0.875em;
  font-weight: bold;
  padding: 5px 10px;
  border-radius: 20px;
  text-transform: uppercase;
}

.section-title {
  font-size: 1.5em;
  font-weight: bold;
  color: #333;
  margin-top: 40px;
  margin-bottom: 20px;
  text-align: left;
  border-bottom: 2px solid #e0e0e0;
  padding-bottom: 10px;
}

h3.section-title {
  font-size: 1.25em;
  }

  .host-details-container {
    display: flex;
    align-items: flex-start;
    gap: 20px;
    margin-bottom: 40px;
  }

  .host-photo-container {
  flex: 0 0 100px; /* Smaller, fixed width */
  width: 100px;
  height: 100px;
    overflow: hidden;
  border-radius: 50%; /* Circular photo */
  }

  .host-photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .host-info {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    flex: 1;
  }

  .host-name {
    font-size: 1.1em;
    font-weight: bold;
    color: #333;
    margin-bottom: 0px;
  }

.host-bio-container {
    font-size: 1em;
    color: #555;
    line-height: 1.6;
  margin-top: 5px;
}

.host-bio-truncated {
  display: -webkit-box;
  -webkit-line-clamp: 2; /* Show only 2 lines */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.host-bio-container[data-expanded="true"] .host-bio-truncated {
  -webkit-line-clamp: unset;
}

.read-more-btn {
  background: none;
  border: none;
  color: #007bff;
  cursor: pointer;
  padding: 0;
  margin-top: 10px;
    font-weight: bold;
}

@media (max-width: 768px) {
  .host-details-container {
    flex-direction: column;
    align-items: center;
  }

  .host-photo-container {
    flex: none;
    width: 100px;
    height: 100px;
    margin-bottom: 20px;
  }

  .host-info {
    width: 100%;
  }
}

.booking-form-content {
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.booking-form-content.show {
  display: block;
  opacity: 1;
}

.private-icon-wrapper {
  display: inline-flex;
  align-items: center;
    margin-right: 10px;
  vertical-align: middle;
}

#private-icon {
  width: 24px;
  height: 20px;
  display: inline-block;
  vertical-align: middle;
}

.icon-path {
  fill: url(#icon-gradient);
  animation: slowPulse 10s infinite alternate;
}

@keyframes slowPulse {
  0% { opacity: 0.8; }
  100% { opacity: 1; }
}

.booking-form .booking-title {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.modern-booking-container {
  /* Remove extra styling to match original */
}

.quantity-selector label {
  display: block;
  font-size: 14px;
  color: #555;
  margin-bottom: 8px;
}

.schedule-data-hidden {
  display: none;
}

/* Second Row Layout - Booking Controls */
.booking-controls-second-row {
  margin: 24px 0;
}

/* Variant Selector with Images - Horizontal Layout */
.variant-selector-with-images {
  margin-bottom: 20px;
}

.variant-selector-title {
  font-size: 16px;
  font-weight: 600;
  color: #333;
  margin-bottom: 12px;
}

.variant-options-row {
  display: flex;
  gap: 12px;
  flex-wrap: nowrap;
  margin-bottom: 20px;
  overflow-x: auto;
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: thin;
  scrollbar-color: #ccc transparent;
}

.variant-options-row::-webkit-scrollbar {
  height: 6px;
}

.variant-options-row::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 3px;
}

.variant-options-row::-webkit-scrollbar-thumb {
  background: #ccc;
  border-radius: 3px;
}

.variant-options-row::-webkit-scrollbar-thumb:hover {
  background: #999;
}

.variant-option-card {
  border: 2px solid #e5e5e5;
  border-radius: 16px;
  padding: 0;
  cursor: pointer;
  transition: all 0.3s ease;
  background: white;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  text-align: center;
  min-width: 160px;
  flex: 0 0 160px;
  overflow: hidden;
}

.variant-option-card:hover {
  border-color: #007bff;
  transform: translateY(-2px);
}

.variant-option-card.selected {
  border-color: #007bff;
  background: #f8f9ff;
}

.variant-option-card[data-variant-available="false"] {
  opacity: 0.6;
  cursor: not-allowed;
  background: #f5f5f5;
}

.variant-option-card[data-variant-available="false"]:hover {
  transform: none;
  box-shadow: none;
}

.variant-card-image {
  width: 100%;
  height: 120px;
  border-radius: 0;
  overflow: hidden;
  margin-bottom: 0;
  border: none;
  flex: 1;
}

.variant-card-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 0;
}

.variant-image-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f8f9fa;
  border: 1px dashed #ccc;
}

.variant-card-info {
  padding: 12px 16px 16px 16px;
  background: white;
  flex-shrink: 0;
}

.variant-card-title {
  font-size: 15px;
  font-weight: 600;
  color: #333;
  margin-bottom: 6px;
  line-height: 1.3;
}

.variant-card-price {
  font-size: 16px;
  font-weight: 700;
  color: #007bff;
  margin-bottom: 6px;
}

.variant-unavailable {
  font-size: 11px;
  color: #dc3545;
  font-weight: 600;
  background: #fff5f5;
  padding: 2px 4px;
  border-radius: 4px;
  border: 1px solid #f5c6cb;
}

.variant-card-checkmark {
  position: absolute;
  top: 12px;
  right: 12px;
  width: 24px;
  height: 24px;
  background: #007bff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.3s ease;
}

.variant-option-card.selected .variant-card-checkmark {
  opacity: 1;
  transform: scale(1);
}

/* Quantity and Book Controls Row */
.quantity-book-controls {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 12px;
  flex-wrap: wrap;
  width: 100%;
}

/* When variants are present, align controls to the left to match variants */
.has-variants .quantity-book-controls {
  justify-content: flex-start;
}

/* Mobile responsive: wrap to 3-per-row only on smaller screens */
@media (max-width: 768px) {
  .variant-options-row {
    flex-wrap: wrap;
    overflow-x: visible;
  }
  
  .variant-option-card {
    flex: 0 0 calc(33.333% - 8px);
    max-width: calc(33.333% - 8px);
    min-width: 120px;
  }
}

@media (max-width: 480px) {
  .variant-option-card {
    flex: 0 0 calc(33.333% - 8px);
    max-width: calc(33.333% - 8px);
    min-width: 100px;
  }
  
  .variant-options-row {
    gap: 8px;
    flex-wrap: wrap;
    overflow-x: visible;
  }
}
  
  .variant-card-image {
    width: 100%;
    height: 100px;
    object-fit: cover;
  }
  
  .variant-card-info {
    padding: 10px 12px 12px 12px;
  }
  
  .variant-card-title {
    font-size: 14px;
  }
  
  .variant-card-price {
    font-size: 15px;
  }
  
  .quantity-book-controls {
    justify-content: center;
    gap: 16px;
  }
}

@media (max-width: 480px) {
  .booking-controls-second-row {
    margin: 20px 0;
  }
  
  .variant-options-row {
    gap: 8px;
    justify-content: space-between;
    flex-wrap: nowrap;
  }
  
  .variant-option-card {
    flex: 1;
    min-width: 0;
    max-width: calc(50% - 4px);
    padding: 0;
  }
  
  .variant-card-image {
    width: 100%;
    height: 90px;
    object-fit: cover;
  }
  
  .variant-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .variant-card-info {
    padding: 8px 10px 10px 10px;
  }
  
  .variant-card-title {
    font-size: 13px;
    line-height: 1.2;
  }
  
  .variant-card-price {
    font-size: 14px;
  }
  
  .quantity-book-controls {
    flex-direction: column;
    gap: 12px;
    width: 100%;
    align-items: center;
  }
  
  .quantity-book-controls .add-to-cart-btn {
    width: 100% !important;
    margin-left: 0 !important;
  }
}

.quantity-price-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8f9fa;
  border: 1px solid #e0e0e0;
  border-radius: 24px;
  padding: 12px 18px;
}

.quantity-price-container select {
  border: none;
  background: transparent;
  font-size: 14px;
  padding: 5px;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0px center;
  background-size: 16px;
  padding-right: 24px;
  min-width: 80px;
  width: 80px;
}

.price-display {
  font-size: 14px;
    color: #333;
}

.discount-card {
  background-color: #0077cc;
  border: none;
  color: white;
  padding: 12px;
  border-radius: 8px;
    text-align: center;
    margin-bottom: 20px;
  font-size: 14px;
}

.calendar-container {
  margin-bottom: 20px;
}

.month-navigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

.month-nav {
  background: white;
  border: 1px solid #e0e0e0;
  border-radius: 50%;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: #333;
}

#current-month-display {
  font-size: 14px;
  font-weight: 500;
  margin: 0;
}

.calendar-days {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 8px;
    margin-bottom: 8px;
}

.day-header {
  text-align: center;
  font-size: 14px;
  color: #777;
  font-weight: 500;
}

.calendar-grid {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 8px;
}

.calendar-day {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.calendar-day.available {
  background-color: white;
  color: #333;
  border: 1px solid #e0e0e0;
}

.calendar-day.available:hover {
  background-color: #f8f8f8;
  border-color: #ccc;
}

.calendar-day.selected {
  background-color: #000;
  color: white;
  border: 1px solid #000;
}

.calendar-day.unavailable {
  color: #ccc;
  background-color: #f9f9f9;
  cursor: default;
  text-decoration: line-through;
}

.calendar-day.empty {
  border: none;
}

.time-selector {
    margin-bottom: 20px;
}

.time-selector label {
  display: block;
  font-size: 14px;
    color: #555;
  margin-bottom: 8px;
}

.time-selector select {
  width: 100%;
  padding: 12px;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  font-size: 14px;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
}

.total-price-container {
  font-size: 14px;
  font-weight: 500;
  margin-bottom: 20px;
  padding: 12px;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  background-color: #f9f9f9;
}

.book-now-btn {
  width: 100%;
  padding: 14px;
  background-color: #000;
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.book-now-btn:hover {
  background-color: #333;
}

.no-charge-notice {
  text-align: center;
  font-size: 14px;
  color: #777;
  margin: 8px 0 20px;
}

.email-container {
    display: none;
  margin-top: 20px;
}

.email-container input,
.email-container textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  font-size: 14px;
  margin-bottom: 12px;
  box-sizing: border-box;
}

.email-container textarea {
  min-height: 100px;
  resize: vertical;
}

.submit-btn {
  width: 100%;
  padding: 14px;
  background-color: #000;
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.submit-btn:hover {
  background-color: #333;
}

.success-message {
  color: #2e7d32;
  text-align: center;
  font-weight: 500;
  padding: 12px;
  background-color: #e8f5e9;
  border-radius: 8px;
  margin: 20px 0;
  font-size: 14px;
}

.contact-link {
    display: block;
  text-align: center;
  color: #555;
  text-decoration: none;
  margin-top: 20px;
  font-size: 14px;
}

/* Style 2 - New Dark Theme (matches user image) */
.private-booking-card-v2 {
  max-width: 520px;
  margin: 0 auto 20px auto;
  background: #4A5568;
  border-radius: 16px;
  padding: 28px;
  box-shadow: 0 10px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04);
  width: 100%;
  box-sizing: border-box;
}

/* Style 3 - Light Theme */
.private-booking-card-v3 {
  max-width: 520px;
  margin: 0 auto 20px auto;
  background: #ffffff;
  border-radius: 16px;
  padding: 28px;
  box-shadow: 0 10px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04);
  border: 1px solid #e2e8f0;
  width: 100%;
  box-sizing: border-box;
}

.private-event-title-internal {
  text-align: center;
  margin-bottom: 28px;
}

.private-event-title-internal h2 {
  color: #ffffff; /* White title text */
  font-size: 20px; /* Smaller font size */
  font-weight: 400;
  margin: 0;
  border-bottom: 1.5px dashed #798598;
  padding-bottom: 13px;
  letter-spacing: -0.02em;
}

/* Light theme title styling */
.private-booking-card-v3 .private-event-title-internal h2 {
  color: #2d3748; /* Dark title text for light theme */
  border-bottom: 1.5px dashed #cbd5e0;
}

.team-size-selector {
  text-align: center;
  margin-bottom: 32px;
}

.team-size-selector select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  border: none;
  color: white;
    font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  outline: none;
  padding-right: 20px;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right center;
}

/* Light theme dropdown styling */
.private-booking-card-v3 .team-size-selector select {
  color: #2d3748;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%232d3748' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
}

.form-fields-v2 {
  display: flex;
      flex-direction: column;
  gap: 20px;
  margin-bottom: 32px;
}

.form-fields-v2 input,
.form-fields-v2 textarea {
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid #718096;
  border-radius: 16px;
  padding: 14px 16px;
  color: #2D3748;
  font-size: 14px;
  transition: all 0.2s ease;
      width: 100%;
  box-sizing: border-box;
}

/* Light theme form fields */
.private-booking-card-v3 .form-fields-v2 input,
.private-booking-card-v3 .form-fields-v2 textarea {
  background: #f7fafc;
  border: 2px solid #e2e8f0;
  color: #2d3748;
}

.private-booking-card-v3 .form-fields-v2 input:focus,
.private-booking-card-v3 .form-fields-v2 textarea:focus {
  border-color: #4299e1;
  background: #ffffff;
  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);
}

.form-fields-v2 input::placeholder,
.form-fields-v2 textarea::placeholder {
  color: #718096;
}

.form-fields-v2 input:focus,
.form-fields-v2 textarea:focus {
  outline: none;
  border-color: #A0AEC0;
  box-shadow: 0 0 0 2px rgba(160, 174, 192, 0.2);
  background: rgba(255, 255, 255, 1);
}

.form-fields-v2 textarea {
  resize: vertical;
  min-height: 100px;
}

.quote-button-v2 {
  width: 100%;
  background: #2D3748;
  border: none;
  border-radius: 16px;
  padding: 16px;
  color: white;
  font-size: 15px;
  font-weight: 400;
  cursor: pointer;
  transition: background-color 0.2s ease;
  margin-bottom: 16px;
}

.quote-button-v2:hover {
  background: #1A202C;
}

/* Light theme button */
.private-booking-card-v3 .quote-button-v2 {
  background: #4299e1;
  color: white;
}

.private-booking-card-v3 .quote-button-v2:hover {
  background: #3182ce;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
}

.contact-buttons-external {
  display: flex;
  flex-direction: column;
  gap: 12px;
  max-width: 380px;
  margin: 0 auto;
  width: 100%;
}

.contact-button-external {
  background: transparent;
  border: 1px solid #E2E8F0;
  border-radius: 12px;
  padding: 10px 16px;
  color: #718096;
  font-size: 14px;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.contact-button-external:hover {
  background: #F7FAFC;
  border-color: #CBD5E0;
  color: #4A5568;
}

.contact-button-external svg {
  flex-shrink: 0;
}

/* Mobile contact buttons styling - Full Width */
@media (max-width: 480px) {
  .contact-buttons-external {
    max-width: 100%;
    margin: 16px 0 0 0;
    gap: 16px;
    padding: 0;
    width: 100%;
  }
  
  .contact-button-external {
    width: 100%;
    padding: 14px 16px;
    font-size: 15px;
    min-height: 48px;
    box-sizing: border-box;
    margin: 0;
  }
}

@media (max-width: 360px) {
  .contact-buttons-external {
    padding: 0;
    gap: 12px;
  }
  
  .contact-button-external {
    padding: 12px 14px;
    font-size: 14px;
    min-height: 44px;
  }
}

/* Re-styling success message for dark theme */
.success-message-style2 {
  background: #4A5568;
  border: 1px solid #718096;
  border-radius: 16px;
  padding: 20px;
  margin: 24px 0;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
}

.success-icon {
  background: #16a34a;
  color: white;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
    font-weight: bold;
  font-size: 14px;
}

.success-message-style2 p {
  margin: 0;
  color: white;
  font-weight: 500;
  font-size: 15px;
  }

/* Light theme success message */
.private-booking-card-v3 .success-message-style2 {
  background: #f0fff4;
  border: 1px solid #9ae6b4;
  color: #22543d;
}

.private-booking-card-v3 .success-message-style2 p {
  color: #22543d;
}

/* Perfect circle online dot styling */
.online-dot {
  width: 6px !important;
  height: 6px !important;
  background-color: #28a745 !important;
  border-radius: 50% !important;
  animation: perfect-pulse 2s infinite !important;
  flex-shrink: 0 !important;
  display: inline-block !important;
  box-sizing: border-box !important;
}

/* Enhanced pulse animation for perfect circle */
@keyframes perfect-pulse {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.2);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Dark theme online dot */
.response-indicator--dark .online-dot {
  background-color: #ffc107 !important;
}

/* Light theme online dot */
.response-indicator--light .online-dot {
  background-color: #28a745 !important;
}

/* Product Purchase Bar Styles */
.product-purchase-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 0;
  background-color: transparent;
  border-radius: 120px;
  margin-bottom: 10px;
  width: auto;
  grid-column: 1 / -1; /* Span across all columns */
}

/* Only stack vertically when variants are present */
.product-purchase-bar.has-variants {
  flex-direction: column;
  align-items: flex-start;
  gap: 20px;
}

.product-purchase-bar .title-with-tag {
  display: flex;
  align-items: center;
  gap: 15px;
  flex-grow: 1;
}

.product-purchase-bar .product-title {
  font-size: 2.6rem;
  font-weight: 600;
  margin: 0;
  color: #212529;
  line-height: 1.2;
}

.product-purchase-bar .event-type {
  display: inline-flex;
  align-items: center;
  background-color: #4caf50;
  color: white;
  font-size: 0.875em;
  font-weight: bold;
  padding: 5px 10px;
  border-radius: 20px;
  text-transform: uppercase;
  white-space: nowrap;
  height: fit-content;
  line-height: 1;
  gap: 6px;
}

.product-purchase-bar .custom-icon {
  width: 18px;
  height: 18px;
  flex-shrink: 0;
  filter: brightness(0) invert(1);
}

.product-purchase-bar .product-form {
  display: flex;
  align-items: center;
  flex-direction: row;
  width: max-content;
}

/* Full width when variants are present and stacked */
.product-purchase-bar.has-variants .product-form {
  width: 100%;
}

/* Ensure proper horizontal layout when no variants */
.product-purchase-bar:not(.has-variants) .product-form {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
  gap: 15px;
  width: 100%;
}

.product-purchase-bar .quantity-selector {
  display: flex;
  align-items: center;
  background-color: rgb(255, 255, 255);
  border-radius: 60px;
  overflow: hidden;
  min-width: fit-content;
  border: 1px solid #4A5568;
  gap: 0;
  height: 50px;
}

.product-purchase-bar .quantity-display {
  display: flex !important;
  align-items: center !important;
  gap: 6px !important;
  padding: 0 12px !important;
  height: 100% !important;
  justify-content: center !important;
}

.product-purchase-bar .quantity-input {
  width: 25px;
  text-align: center;
  border: none;
  font-size: 16px;
  font-weight: 600;
  color: #212529;
  background-color: transparent;
  padding: 0;
  margin: 0;
  height: 30px;
  line-height: 30px;
  -moz-appearance: textfield;
}

.product-purchase-bar .quantity-label {
  font-size: 16px;
  font-weight: 500;
  color: #495057;
  white-space: nowrap;
  line-height: 1;
}

.product-purchase-bar .quantity-input::-webkit-outer-spin-button,
.product-purchase-bar .quantity-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.product-purchase-bar .quantity-btn {
  background-color: transparent;
  border: none;
  cursor: pointer;
  padding: 0 16px;
  font-size: 16px;
  font-weight: 700;
  color: #495057;
  transition: all 0.15s ease;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 50px;
  position: relative;
}

.product-purchase-bar .quantity-btn:hover {
  color: #000;
  background-color: rgba(0,0,0,0.05);
}

.product-purchase-bar .quantity-btn:active {
  transform: scale(0.95);
  background-color: rgba(0,0,0,0.1);
}

/* Add a nice press animation */
@keyframes quantityBtnPress {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.product-purchase-bar .quantity-btn.animate-press {
  animation: quantityBtnPress 0.2s ease;
}

.product-purchase-bar .add-to-cart-btn {
  padding: 15px 50px;
  border-radius: 30px;
  font-size: 1.3rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  background-color: #007bff;
  color: white;
  width: max-content;
  margin-left: 15px;
}

.product-purchase-bar .add-to-cart-btn:hover {
  background-color: #0056b3;
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
}

.product-purchase-bar .add-to-cart-btn:disabled {
  background-color: #ccc;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Product Price Display Under Title */
.product-purchase-bar .product-price-display {
  margin: 2px 0 4px 0;
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.product-purchase-bar .product-price {
  font-size: 1.8rem;
  color: #000;
  font-weight: 700;
  line-height: 1.2;
}

.product-purchase-bar .product-price--sale {
  color: #d63384;
  font-weight: 800;
}

.product-purchase-bar .product-price--original {
  text-decoration: line-through;
  font-size: 1.6rem;
  color: #999;
  font-weight: 500;
}

/* Tilting animation for Book Now button */
@keyframes tilt {
  0%, 100% { transform: translateY(-2px) rotate(0deg); }
  15% { transform: translateY(-2px) rotate(-8deg); }
  30% { transform: translateY(-2px) rotate(8deg); }
  45% { transform: translateY(-2px) rotate(-8deg); }
  60% { transform: translateY(-2px) rotate(8deg); }
  75% { transform: translateY(-2px) rotate(0deg); }
}

.product-purchase-bar .add-to-cart-btn:not(:disabled) {
  animation: tilt 2s ease-in-out 3s 1;
}

/* Title with Tag Column Layout - Tag on Top */
.title-with-tag-column {
  display: flex;
  flex-direction: column;
  gap: 4px;
  width: 100%;
}

.event-tag-top {
  display: flex;
  justify-content: flex-start;
  width: 100%;
}

.title-rating-row {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
  justify-content: normal;
  width: 100%;
}

.title-rating-row .product-title {
  margin: 0;
  min-width: 0;
  word-break: break-word;
  hyphens: auto;
}

.title-rating-row .product-rating-summary {
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 6px;
  flex: 0 0 auto;
}

.rating-text {
  color: #666;
  font-size: 14px;
  font-weight: 500;
}

.rating-arrow {
  margin-left: 4px;
}

  @media (max-width: 768px) {
    .product-purchase-bar {
      flex-direction: column;
      align-items: stretch;
      gap: 18px;
      border-radius: 30px;
      margin-left: 0;
      margin-right: 0;
      padding: 12px 0;
    }

    .product-purchase-bar .title-with-tag {
      flex-direction: column;
      align-items: center;
      gap: 10px;
    }

    .product-purchase-bar .product-title {
      text-align: center;
      font-size: 2.3rem;
    }
    

    .product-purchase-bar.has-variants .product-form {
      flex-direction: column;
      align-items: stretch;
      gap: 15px;
      width: 100%;
    }
    
    /* Keep horizontal layout for no-variants on mobile */
    .product-purchase-bar:not(.has-variants) .product-form {
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 15px;
      width: 100%;
    }

    .product-purchase-bar .quantity-selector {
      flex: 0 0 auto;
      justify-self: center;
      align-self: center;
    }

    .product-purchase-bar.has-variants .add-to-cart-btn {
      min-width: 0;
      width: 100%;
      margin-left: 0;
      order: 2;
    }
    
    /* Keep button normal width when no variants */
    .product-purchase-bar:not(.has-variants) .add-to-cart-btn {
      width: auto;
      min-width: 120px;
    }

    .title-with-tag-column {
      gap: 6px;
    }

    .title-rating-row {
      gap: 10px;
      justify-content: flex-start;
    }

    .title-rating-row .product-rating-summary {
      flex: 0 0 auto;
    }

    .title-rating-row .product-title {
      flex: 1;
      min-width: 180px;
    }

    .booking__container.container--with-aside-paddings {
      padding-left: 8px;
      padding-right: 8px;
    }

    .booking__container.container {
      padding-left: 8px;
      padding-right: 8px;
    }

    .product-purchase-bar .product-title {
      font-size: 2.2rem !important;
      line-height: 1.4;
      text-align:left;
    }
    
    .product-purchase-bar .product-price {
      font-size: 1.6rem;
    }
    
    .product-purchase-bar .product-price--original {
      font-size: 1.4rem;
    }
  }

/* Small Mobile Devices - Prevent Private Event Form Overflow */
@media (max-width: 480px) {
  .booking-form-container {
    display: block;
    width: 100%;
    padding: 0;
  }
  
  .private-booking-card-v2,
  .private-booking-card-v3 {
    max-width: 100%;
    margin: 0 0 20px 0;
    padding: 16px;
    border-radius: 0;
  }
  
  .private-event-title-internal h2 {
    font-size: 18px;
  }
  
  .form-fields-v2 input,
  .form-fields-v2 textarea {
    padding: 12px 14px;
    font-size: 14px;
  }
  
  .quote-button-v2 {
    padding: 14px;
    font-size: 14px;
  }
}

@media (max-width: 360px) {
  .booking-form-container {
    display: block;
    width: 100%;
    padding: 0;
  }
  
  .private-booking-card-v2,
  .private-booking-card-v3 {
    max-width: 100%;
    margin: 0 0 20px 0;
    padding: 12px;
    border-radius: 0;
  }
  
  .private-event-title-internal h2 {
    font-size: 16px;
  }
  
  .form-fields-v2 input,
  .form-fields-v2 textarea {
    padding: 10px 12px;
    font-size: 13px;
  }
  
  .quote-button-v2 {
    padding: 12px;
    font-size: 13px;
  }
  
  /* Style 1 Private Booking Form - Small Device Fixes */
  .booking-form.private {
    margin: 0 5px;
    padding: 16px 12px;
  }
  
  .booking-form.private .booking-title {
    font-size: 16px;
  }
  
  .booking-form.private input,
  .booking-form.private select,
  .booking-form.private textarea {
    font-size: 13px;
    padding: 10px 12px;
  }
}

/* Accordion Styles */
.accordion-item {
  border-bottom: 1px solid #e0e0e0;
}

.accordion-item summary {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 0;
  cursor: pointer;
  list-style: none; /* Remove default marker */
}

.accordion-item summary::-webkit-details-marker {
  display: none; /* Hide for Chrome/Safari */
}

.accordion-item h3 {
  font-size: 1.25em;
  font-weight: bold;
  color: #333;
  margin: 0;
  transition: all 0.3s ease;
}

.accordion-item:hover h3 {
  color: #000;
  transform: translateX(10px);
}

.accordion-item[open] h3 {
  color: #000;
}

.accordion-item .accordion-content {
  padding-bottom: 20px;
}

.accordion-item .accordion-icon {
  transition: all 0.3s ease;
  font-size: 1.5em;
  font-weight: bold;
  color: #666;
}

.accordion-item:hover .accordion-icon {
  color: #333;
  transform: scale(1.1);
}

.accordion-item[open] summary .accordion-icon {
  transform: rotate(45deg) scale(1.1);
  color: #000;
}

  .discount-info {
    color: #ff6a00;
  }

  /* Sales Point Images Styles */
  .sales-point-images {
    margin: 30px 0;
  }

  .sales-point-grid {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-top: 15px;
  }

  .sales-point-item {
    text-align: center;
  }

  .sales-point-item img {
    width: 100%;
    height: auto;
    border-radius: 10px;
    box-shadow: none;
  }

  .sales-point-caption {
    margin-top: 10px;
    font-size: 0.9em;
    color: #666;
    line-height: 1.4;
    text-align: center;
  }

  /* Location Section Styles */
  .location-section {
    margin: 30px 0;
  }

  .location-address {
    margin-bottom: 15px;
  }

  .location-address p {
    margin: 0;
    color: #333;
  }

  .google-maps-container {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }

  .google-maps-container iframe {
    display: block;
  }

  /* Location Action Buttons */
  .images-with-text__buttons {
    margin: 20px 0;
  }

  @media (max-width: 768px) {
    .location-actions {
      flex-direction: column;
      gap: 10px;
    }
    
    .location-btn {
      justify-content: center;
      padding: 14px 20px;
    }
    
    .sales-point-grid {
      grid-template-columns: 1fr;
      gap: 15px;
    }
    
    .kit-content-grid {
      grid-template-columns: 1fr !important;
      gap: 15px !important;
    }
  }

/* Upcoming Classes Pills - Under Product Title */
.upcoming-classes-pills {
  margin: 8px 0 16px 0;
  width: 100%;
  text-align: left;
}

.pills-container {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.pills-list {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  justify-content: flex-start;
}

.calculating-pills {
  color: #6c757d;
  font-size: 0.8rem;
  font-style: italic;
  padding: 6px 12px;
  background: transparent;
  border-radius: 12px;
}

.date-pill {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 4px 8px;
  background: transparent;
  border-radius: 12px;
  font-size: 16px;
  color: #6c757d;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.date-pill:hover {
  background: rgba(0,0,0,0.05);
}

.date-pill.today {
  background: rgba(76, 175, 80, 0.1);
  color: #2e7d32;
  font-weight: 500;
  border: 1px solid rgba(76, 175, 80, 0.2);
  padding: 6px 12px;
  gap: 6px;
}

.date-pill.tomorrow {
  background: rgba(255, 193, 7, 0.1);
  color: #856404;
  font-weight: 500;
}

.date-pill.schedule-pill {
  background: rgba(0, 123, 255, 0.05);
  color: #495057;
  font-weight: 500;
  border: 1px solid rgba(0, 123, 255, 0.1);
}

.pill-date {
  font-weight: 500;
  font-size: 16px;
}

.pill-time {
  font-size: 14px;
  opacity: 0.7;
  font-weight: 400;
}

.today .pill-date {
  font-size: 16px;
  text-transform: none;
  font-weight: 500;
}

.today .pill-time {
  opacity: 0.8;
  font-weight: 400;
}

.tomorrow .pill-time {
  opacity: 0.8;
  font-weight: 500;
}

.no-upcoming-pills, .no-schedule-pills {
  color: #6c757d;
  font-size: 0.85rem;
  font-style: italic;
  padding: 8px 16px;
}

/* Mobile responsive for pills */
@media (max-width: 768px) {
  .upcoming-classes-pills {
    margin: 10px 0 14px 0;
  }

  .pills-list {
    gap: 6px;
  }

  .date-pill {
    padding: 4px 8px;
    font-size: 14px;
  }

  .pill-date {
    font-size: 14px;
  }

  .pill-time {
    font-size: 12px;
  }
}

@media (max-width: 480px) {
  .upcoming-classes-pills {
    margin: 8px 0 12px 0;
  }

  .date-pill {
    padding: 3px 6px;
    font-size: 13px;
    gap: 3px;
  }

  .pill-date {
    font-size: 13px;
  }

  .pill-time {
    font-size: 11px;
  }

  .calculating-pills {
    font-size: 0.75rem;
    padding: 4px 8px;
  }
}

/* Workshop Steps Styles */
.workshop-steps-section {
  margin: 40px 0;
}

.workshop-steps-section h3 {
  font-size: 1.5em;
  font-weight: bold;
  margin-bottom: 24px;
  color: #333;
}

.workshop-steps-list {
  /* Container for all steps */
}

.workshop-step {
  display: flex;
  gap: 20px;
  margin-bottom: 32px;
  align-items: center;
}

.step-image {
  flex-shrink: 0;
  width: 120px;
  height: 120px;
  border-radius: 8px;
  overflow: hidden;
  background: #f5f5f5;
}

.step-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.step-content {
  flex: 1;
}

.step-content h4 {
  font-size: 1.2em;
  font-weight: 600;
  margin-bottom: 8px;
  color: #2c3e50;
}

.step-content p {
  color: #666;
  line-height: 1.5;
  margin: 0;
}

@media (max-width: 768px) {
  .workshop-step {
    gap: 16px;
  }
  
  .step-image {
    width: 100px;
    height: 100px;
  }
  
  .step-content h4 {
    font-size: 1.1em;
  }
  
  .step-content p {
    font-size: 0.9em;
  }
}

</style>

<!-- Event Schema is now handled inline in the product.event.json template -->

<div class="booking section section-{{ section.id }} color-{{ color_scheme }}">
  
  <div class="booking__container container container--{{ section.settings.container_size }} section-spacing {% if section.settings.add_side_paddings %}container--with-aside-paddings{% endif %}">
    

    <!-- Product Purchase Bar (Spans across both columns) -->
    <div class="product-purchase-bar{% if product.variants.size > 1 %} has-variants{% endif %}">
      {% if section.settings.show_product_title != false %}
                <div class="title-with-tag-column">
          <!-- Event Tag on Top -->
          <!-- Event Location Tag on Top -->
          {%- if event and event.location.value != blank -%}
            {%- liquid
              assign event_location_val = event.location.value | downcase
              assign bg_color = '#4caf50'
              assign location_icon = '📍'
              
              if event_location_val contains 'virtual'
                assign bg_color = '#4caf50'
                assign location_icon = '💻'
              elsif event_location_val contains 'new york' or event_location_val contains 'nyc'
                assign bg_color = '#f44336'
                assign location_icon = '🗽'
              elsif event_location_val contains 'honolulu'
                assign bg_color = 'linear-gradient(45deg, #FF6B35, #F7931E, #FFD23F, #06FFA5, #00D4FF)'
                assign location_icon = '🌺'
              elsif event_location_val contains 'san francisco'
                assign bg_color = '#FFA500'
                assign location_icon = '🌉'
              elsif event_location_val contains 'irvine'
                assign bg_color = '#2196F3'
                assign location_icon = '🏖️'
              endif
            -%}
            <div class="event-tag-top">
              <div class="event-type" data-bg-color="{{ bg_color }}" style="background: {{ bg_color }};">
                <span style="margin-right: 6px;">{{ location_icon }}</span>
                <span>{{ event.location.value }}</span>
              </div>
            </div>
          {%- endif -%}
          
          <!-- Title and Rating Row -->
          <div class="title-rating-row">
            <h1 class="product-title">{{ product.title }}</h1>
            
            <!-- Review Stars and Rating -->
            {% comment %} Get Loox review data using proper metafield access {% endcomment %}
            {%- liquid
              assign reviews_app = settings.product_card_reviews_app
              assign rating_count = 0
              assign rating_value = 0
              
              if reviews_app == 'loox'
                assign rating_value = product.metafields.loox.avg_rating | plus: 0
                assign rating_count = product.metafields.loox.num_reviews | plus: 0
              endif
            -%}
            
            {% if rating_count > 0 %}
              <div class="product-rating-summary" onclick="scrollToReviews()">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="#FFD700" stroke="#FFD700" stroke-width="1">
                  <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
                </svg>
                <span class="rating-text">{{ rating_value | round: 1 }} ({{ rating_count }})</span>
                <svg class="rating-arrow" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="#999" stroke-width="2">
                  <path d="m6 9 6 6 6-6"/>
                </svg>
              </div>
            {% else %}
              <div class="new-badge">
                NEW
              </div>
            {% endif %}
          </div>
          
          <!-- Price Display Under Title -->
          <div class="product-price-display">
            {% if selected_variant.compare_at_price > selected_variant.price %}
              <span class="product-price product-price--sale">{{ selected_variant.price | money }}</span>
              <span class="product-price product-price--original">{{ selected_variant.compare_at_price | money }}</span>
            {% else %}
              <span class="product-price">{{ selected_variant.price | money }}</span>
            {% endif %}
          </div>
          
          <!-- Upcoming Classes Pills - Right Under Title -->
          {% assign pills_has_schedule = false %}
          {% if event.schedule_entries != blank %}
            {% assign pills_has_schedule = true %}
          {% elsif event.schedule_1_days.value != blank and event.schedule_1_time.value != blank %}
            {% assign pills_has_schedule = true %}
          {% elsif event.schedule_slots.value != blank %}
            {% assign pills_has_schedule = true %}
          {% elsif event.schedule_days.value != blank and event.schedule_time.value != blank %}
            {% assign pills_has_schedule = true %}
          {% elsif event.workshop_days.value != blank and event.workshop_time != blank %}
            {% assign pills_has_schedule = true %}
          {% endif %}
          
          {% if section.settings.show_next_class and pills_has_schedule %}
            <div class="upcoming-classes-pills">
              <div class="pills-container" data-event-handle="{{ event.handle }}">
                {%- comment -%} Use same data extraction logic as workshop cards {%- endcomment -%}
                {%- assign times_text = event.workshop_time | default: '' -%}
                {%- assign timezone = event.time_zone | default: 'EST' -%}

                {%- comment -%} Extract day names using EXACT same pattern as workshop cards {%- endcomment -%}
                {%- assign days_text = '' -%}
                {%- if event.workshop_days.value != blank -%}
                  {%- assign day_names_array = '' -%}
                  {%- for day_ref in event.workshop_days.value -%}
                    {%- assign day_value = '' -%}
                    {%- if day_ref.day != blank -%}
                      {%- assign day_value = day_ref.day -%}
                    {%- elsif day_ref.name != blank -%}
                      {%- assign day_value = day_ref.name -%}
                    {%- elsif day_ref.title != blank -%}
                      {%- assign day_value = day_ref.title -%}
                    {%- endif -%}
                    
                    {%- if day_value != blank -%}
                      {%- assign day_names_array = day_names_array | append: day_value -%}
                      {%- unless forloop.last -%}{%- assign day_names_array = day_names_array | append: ',' -%}{%- endunless -%}
                    {%- endif -%}
                  {%- endfor -%}
                  {%- assign days_text = day_names_array -%}
                {%- endif -%}

                {%- comment -%} Parse times using same method as workshop cards {%- endcomment -%}
                {%- assign parsed_times = '' -%}
                {%- if times_text != blank -%}
                  {%- if times_text contains ' and ' -%}
                    {%- assign time_parts = times_text | split: ' and ' -%}
                  {%- elsif times_text contains ', ' -%}
                    {%- assign time_parts = times_text | split: ', ' -%}
                  {%- else -%}
                    {%- assign time_parts = times_text | split: ',' -%}
                  {%- endif -%}
                  
                  {%- for time_part in time_parts -%}
                    {%- assign clean_time = time_part | strip -%}
                    {%- if clean_time != blank -%}
                      {%- assign parsed_times = parsed_times | append: clean_time -%}
                      {%- unless forloop.last -%}{%- assign parsed_times = parsed_times | append: '|' -%}{%- endunless -%}
                    {%- endif -%}
                  {%- endfor -%}
                {%- endif -%}

                <span class="schedule-data-hidden" data-days="{{ days_text }}" data-times="{{ parsed_times }}" data-timezone="{{ timezone }}"></span>
                
                <div id="upcoming-pills-{{ event.handle }}" class="pills-list">
                  <div class="calculating-pills">📅 Loading upcoming dates...</div>
                </div>
              </div>
            </div>
          {% endif %}
          
        </div>
          {% endif %}
      {%- form 'product', product, id: product_form_id, class: 'product-form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
        <input type="hidden" name="id" value="{{ selected_variant.id }}" data-product-form-variant>
        
        <!-- Booking Controls Row - Second Row Layout -->
        <div class="booking-controls-second-row">
          
          <!-- Variant Selector with Images -->
          {% if product.variants.size > 1 %}
            <div class="variant-selector-with-images">
              <h4 class="variant-selector-title">Choose Your Option</h4>
              <div class="variant-options-row">
                {% for variant in product.variants %}
                  <div class="variant-option-card {% if variant.id == selected_variant.id %}selected{% endif %}" 
                       data-variant-id="{{ variant.id }}" 
                       data-variant-price="{{ variant.price }}"
                       data-variant-available="{{ variant.available }}"
                       data-variant-title="{{ variant.title | escape }}"
                       onclick="selectVariantCard({{ variant.id }}, this)"
                       role="button"
                       aria-label="Select {{ variant.title | escape }} for {{ variant.price | money }}">
                    {% if variant.image %}
                      <div class="variant-card-image">
                        <img src="{{ variant.image | image_url: width: 320 }}" 
                             alt="{{ variant.title | escape }}"
                             loading="lazy">
                      </div>
                    {% else %}
                      <div class="variant-card-image variant-image-placeholder">
                        <svg width="30" height="30" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <rect x="3" y="3" width="18" height="18" rx="2" stroke="#ccc" stroke-width="2" fill="#f8f9fa"/>
                          <circle cx="8.5" cy="8.5" r="1.5" fill="#ccc"/>
                          <path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" stroke="#ccc" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                      </div>
                    {% endif %}
                    <div class="variant-card-info">
                      <div class="variant-card-title">{{ variant.title }}</div>
                      <div class="variant-card-price">{{ variant.price | money }}</div>
                      {% unless variant.available %}
                        <div class="variant-unavailable">Sold Out</div>
                      {% endunless %}
                    </div>
                    <div class="variant-card-checkmark">
                      <svg width="16" height="16" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M16.6667 5L7.5 14.1667L3.33334 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>
          {% endif %}
          
          <!-- Quantity and Book Controls Row -->
          <div class="quantity-book-controls">
            {% if section.settings.show_quantity_selector != false %}
              <div class="quantity-selector">
                <button type="button" class="quantity-btn minus" onclick="updateQuantity(-1, this)">-</button>
                <div class="quantity-display">
                  <input type="number" id="quantity-{{ product.id }}" name="quantity" value="1" min="1" class="quantity-input" onchange="updateQuantityDisplay(this.value)">
                  <span class="quantity-label" id="quantity-label-{{ product.id }}">person</span>
                </div>
                <button type="button" class="quantity-btn plus" onclick="updateQuantity(1, this)">+</button>
              </div>
            {% endif %}
            
            <button
              type="submit"
              name="add"
              class="add-to-cart-btn"
              {% if available == false %}disabled{% endif %}
            >
              <span data-button-text>
                {%- if available -%}Book Now{%- else -%}{{ sold_out_label }}{%- endif -%}
              </span>
              <div class="loading-spinner"></div>
            </button>
          </div>
        </div>
      {%- endform -%}
        </div>

    <!-- Left Column - Event Details -->
      <div class="event-details">
        
      {% if event %}

        
        <!-- Event Description (using the simplified and correct rendering method) -->
        {% if event.description %}
          <div class="rte">{{ event.description | metafield_tag }}</div>
        {% endif %}

        <!-- Workshop Steps - What you'll do -->
        {% if event.step_1_title.value != blank %}
          <div class="workshop-steps-section">
            <h3>What you'll do</h3>
            
            <div class="workshop-steps-list">
              
              <!-- Step 1 -->
              {% if event.step_1_title.value != blank %}
                <div class="workshop-step">
                  {% if event.step_1_image.value != blank %}
                    <div class="step-image">
                      <img src="{{ event.step_1_image.value | img_url: '240x240' }}" 
                           alt="{{ event.step_1_title.value | escape }}"
                           loading="lazy">
                    </div>
                  {% endif %}
                  <div class="step-content">
                    <h4>{{ event.step_1_title.value }}</h4>
                    {% if event.step_1_description.value != blank %}
                      <p>{{ event.step_1_description.value }}</p>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
              
              <!-- Step 2 -->
              {% if event.step_2_title.value != blank %}
                <div class="workshop-step">
                  {% if event.step_2_image.value != blank %}
                    <div class="step-image">
                      <img src="{{ event.step_2_image.value | img_url: '240x240' }}" 
                           alt="{{ event.step_2_title.value | escape }}"
                           loading="lazy">
                    </div>
                  {% endif %}
                  <div class="step-content">
                    <h4>{{ event.step_2_title.value }}</h4>
                    {% if event.step_2_description.value != blank %}
                      <p>{{ event.step_2_description.value }}</p>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
              
              <!-- Step 3 -->
              {% if event.step_3_title.value != blank %}
                <div class="workshop-step">
                  {% if event.step_3_image.value != blank %}
                    <div class="step-image">
                      <img src="{{ event.step_3_image.value | img_url: '240x240' }}" 
                           alt="{{ event.step_3_title.value | escape }}"
                           loading="lazy">
                    </div>
                  {% endif %}
                  <div class="step-content">
                    <h4>{{ event.step_3_title.value }}</h4>
                    {% if event.step_3_description.value != blank %}
                      <p>{{ event.step_3_description.value }}</p>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
              
              <!-- Step 4 (optional) -->
              {% if event.step_4_title.value != blank %}
                <div class="workshop-step">
                  {% if event.step_4_image.value != blank %}
                    <div class="step-image">
                      <img src="{{ event.step_4_image.value | img_url: '240x240' }}" 
                           alt="{{ event.step_4_title.value | escape }}"
                           loading="lazy">
                    </div>
                  {% endif %}
                  <div class="step-content">
                    <h4>{{ event.step_4_title.value }}</h4>
                    {% if event.step_4_description.value != blank %}
                      <p>{{ event.step_4_description.value }}</p>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
              
            </div>
          </div>
        {% endif %}

        <!-- Event Highlights -->
        <div class="details-container">
          {% if event.duration.value != blank %}
            <div class="detail-box">
              <div class="detail-label">Duration</div>
              <div class="detail-value">{{ event.duration.value }} mins</div>
            </div>
          {% endif %}
          {% if event.group_size.value != blank %}
            <div class="detail-box">
              <div class="detail-label">Group Size</div>
              <div class="detail-value">{{ event.group_size.value }}</div>
            </div>
          {% endif %}
          
          <!-- Travel Information -->
          {% if event.travel_friendly != blank or event.certificate_required != blank or event.travel_notes != blank %}
            <div class="detail-box travel-info-box">
              <div class="detail-label">Travel & Requirements</div>
              <div class="detail-value">
                {% if event.travel_friendly == 'Yes' or event.travel_friendly == true %}
                  <span class="travel-status travel-friendly">✓ Air Travel Friendly</span>
                {% elsif event.travel_friendly == 'No' or event.travel_friendly == false %}
                  <span class="travel-status travel-restricted">✗ Not Air Travel Friendly</span>
                {% endif %}
                
                {% if event.certificate_required == 'Yes' or event.certificate_required == true %}
                  <br><span class="certificate-status">📄 Certificate Provided</span>
                {% endif %}
                
                {% if event.travel_notes != blank %}
                  <br><span class="travel-notes">{{ event.travel_notes }}</span>
                {% endif %}
              </div>
            </div>
          {% endif %}
          {% if event.lead_time.value != blank %}
            <div class="detail-box">
              <div class="detail-label">Lead time</div>
              <div class="detail-value">{{ event.lead_time.value }}</div>
            </div>
          {% endif %}
          <!-- Debug: Is Virtual = "{{ event.is_virtual.value }}" -->
          {% if event.is_virtual.value == true %}
            <div class="detail-box">
              <div class="detail-label">Kit delivery</div>
              <div class="detail-value">USA & International</div>
            </div>
            <div class="detail-box">
              <div class="detail-label">Join remotely</div>
              <div class="detail-value">Any platform</div>
            </div>
          {% endif %}
          
          <!-- Next Class Information (Auto-calculated from metaobject schedule) -->
          {% assign has_schedule = false %}
          {% if event.schedule_entries != blank %}
            {% assign has_schedule = true %}
          {% elsif event.schedule_1_days.value != blank and event.schedule_1_time.value != blank %}
            {% assign has_schedule = true %}
          {% elsif event.schedule_slots.value != blank %}
            {% assign has_schedule = true %}
          {% elsif event.schedule_days.value != blank and event.schedule_time.value != blank %}
            {% assign has_schedule = true %}
          {% elsif event.workshop_days.value != blank and event.workshop_time != blank %}
            {% assign has_schedule = true %}
          {% endif %}
          
          {% if section.settings.show_next_class and has_schedule %}
            {% comment %} Temporarily disabled due to asset loading issue {% endcomment %}
            {% comment %} render 'next-class-calculator', event: event {% endcomment %}
            

          {% endif %}
        </div>
        
        <!-- All other Rich Text Sections (What to Expect, Kit Content, etc.) -->
        {%- if event.is_virtual.value == true -%}
          {%- assign collapsible_fields = "kit_content,how_to_join,what_to_bring,cancellation_policy" | split: ',' -%}
        {%- else -%}
          {%- assign collapsible_fields = "kit_content,what_to_bring,cancellation_policy" | split: ',' -%}
        {%- endif -%}
        
        <div class="dynamic-sections">
          
          <!-- What to expect (always visible) -->
          {% if event.what_to_expect != blank %}
            <h2 class="section-title">What to expect</h2>
            <div class="rte">{{ event.what_to_expect | metafield_tag }}</div>
          {% endif %}

          <!-- Sales Point Design Images -->
          {% if event.sales_point_image_1.value != blank or event.sales_point_image_2.value != blank %}
            <div class="sales-point-images">
              <div class="sales-point-grid">
                {% if event.sales_point_image_1.value != blank %}
                  <div class="sales-point-item">
                    <img src="{{ event.sales_point_image_1.value | img_url: '600x400' }}" 
                         alt="{{ event.sales_point_alt_1.value | default: 'Sales point 1' }}"
                         loading="lazy">
                    {% if event.sales_point_text_1.value != blank %}
                      <p class="sales-point-caption">{{ event.sales_point_text_1.value }}</p>
                    {% endif %}
                  </div>
                {% endif %}
                {% if event.sales_point_image_2.value != blank %}
                  <div class="sales-point-item">
                    <img src="{{ event.sales_point_image_2.value | img_url: '600x400' }}" 
                         alt="{{ event.sales_point_alt_2.value | default: 'Sales point 2' }}"
                         loading="lazy">
                    {% if event.sales_point_text_2.value != blank %}
                      <p class="sales-point-caption">{{ event.sales_point_text_2.value }}</p>
                    {% endif %}
                  </div>
                {% endif %}
              </div>
            </div>
          {% endif %}

          <!-- Google Maps Location -->
          {% if event.location_address.value != blank or event.location_coordinates.value != blank %}
            <div class="location-section">
              <h2 class="section-title">Location</h2>
              {% if event.location_address.value != blank %}
                <div class="location-address">
                  <p><strong>Address:</strong> {{ event.location_address.value }}</p>
                </div>
                <div class="images-with-text__buttons">
                  <a href="https://maps.google.com/?q={{ event.location_address.value | url_encode }}" 
                     target="_blank" 
                     class="btn btn--solid images-with-text__button">
                    Get Directions
                  </a>
                  <a href="tel:(650) 200-3809" 
                     class="btn btn--outline images-with-text__button">
                    Call (650) 200-3809
                  </a>
                </div>
              {% endif %}
              {% if event.location_coordinates.value != blank %}
                <details class="accordion-item">
                  <summary>
                    <h3>View on Map</h3>
                    <span class="accordion-icon">+</span>
                  </summary>
                  <div class="accordion-content">
                    <div class="google-maps-container">
                      <iframe 
                        src="{{ event.location_coordinates.value }}" 
                        width="100%" 
                        height="350" 
                        style="border:0; width: 100%; max-width: 100%;" 
                        allowfullscreen="" 
                        loading="lazy" 
                        referrerpolicy="no-referrer-when-downgrade">
                      </iframe>
                    </div>
                  </div>
                </details>
              {% endif %}
            </div>
          {% endif %}

          <!-- Collapsible sections -->
          {% for field_key in collapsible_fields %}
            {%- assign field_value = event[field_key] -%}
            {% if field_value != blank %}
              <details class="accordion-item">
                <summary>
                  <h3>{{ field_key | replace: '_', ' ' | capitalize }}</h3>
                  <span class="accordion-icon">+</span>
                </summary>
                <div class="accordion-content rte">
                  {% if field_key == 'kit_content' and event.kit_content_image != blank %}
                    <div class="kit-content-grid" style="display: grid; grid-template-columns: auto 1fr; gap: 20px; align-items: start;">
                      <div class="kit-content-image-container">
                        <img src="{{ event.kit_content_image | img_url: '400x400', crop: 'center' }}" 
                             alt="Kit Contents" 
                             loading="lazy"
                             style="max-width: 250px; height: auto;">
                      </div>
                      <div class="kit-content-text">
                        {{- field_value | metafield_tag -}}
                      </div>
                    </div>
                  {% else %}
                    {{- field_value | metafield_tag -}}
                  {% endif %}
                </div>
              </details>
            {% endif %}
          {% endfor %}
        </div>

        <!-- Host Details -->
        {% if event.host_name.value != blank %}
          <details class="accordion-item">
            <summary>
              <h3>Meet Your Host</h3>
              <span class="accordion-icon">+</span>
            </summary>
            <div class="accordion-content">
              {% assign host_bio = event.host_bio.value %}
              <div class="host-details-container">
                  <div class="host-photo-container">
                  <img class="host-photo" src="{{ event.host_photo.value | img_url: 'master' }}" alt="Photo of {{ event.host_name.value }}">
                  </div>
                <div class="host-info">
                  {% if host_bio != blank %}
                    <h3 class="host-name">{{ event.host_name.value | default: "Host" }}</h3>
                  {% else %}
                    <h3 class="host-name">
                      <a href="https://kraftstories.com/pages/workshop-instructors" style="color: inherit; text-decoration: none;">{{ event.host_name.value | default: "Host" }}</a>
                    </h3>
                  {% endif %}
                  {% if host_bio != blank %}
                    <div class="host-bio-container" data-expanded="false">
                      <div class="host-bio-truncated">
                        {% if host_bio contains '"type":"doc"' %}
                          {% assign bio_parts = host_bio | split: '"text":"' %}
                          {% for part in bio_parts %}
                            {% unless forloop.first %}
                              {% assign text_content = part | split: '"' | first %}
                              {% unless text_content == blank %}<p>{{ text_content | strip }}</p>{% endunless %}
                            {% endunless %}
                          {% endfor %}
                        {% else %}
                          <p>{{ host_bio }}</p>
                        {% endif %}
                      </div>
                      <button class="read-more-btn" onclick="this.parentElement.setAttribute('data-expanded', this.parentElement.getAttribute('data-expanded') === 'false' ? 'true' : 'false')">Read more</button>
                    </div>
                  {% else %}
                    <p><a href="https://kraftstories.com/pages/workshop-instructors" style="color: #3498db; text-decoration: none;">Learn more about our workshop instructors →</a></p>
                  {% endif %}
                </div>
              </div>
            </div>
          </details>
        {% endif %}

        <!-- Google Reviews Widget for NYC In-Person Events Only -->
        {% comment %} Check if this is an NYC in-person event {% endcomment %}
        {% assign event_location = event.location.value | default: '' | downcase %}
        {% assign event_address = event.location_address.value | default: '' | downcase %}
        {% assign page_handle = page.handle | default: '' | downcase %}
        {% assign product_title = product.title | default: '' | downcase %}
        {% assign event_title = event.title.value | default: '' | downcase %}
        {% assign event_description = event.description.value | default: '' | downcase %}
        
        {% assign detected_location = '' %}
        
        {% comment %} Determine event location {% endcomment %}
        {% if event_location contains 'new york' or event_location contains 'nyc' %}
          {% assign detected_location = 'nyc' %}
        {% elsif event_location contains 'honolulu' or event_address contains 'honolulu' %}
          {% assign detected_location = 'honolulu' %}
        {% endif %}
        




      {% else %}
        <div class="event-not-found">
          <h2>Event not found</h2>
          <p>The event information could not be loaded. Please check the event handle configuration.</p>
        </div>
          {% endif %}
    </div>
    

    
    <div class="booking-form-container">
      <!-- Alternative Private Booking Form - Style 2 (New Dark Theme) -->
      {% if section.settings.private_booking_style == 'style2' %}
      
      <div class="private-booking-card-v2" data-price-per-person="{{ price_per_person }}">

        <div class="private-event-title-internal">
          <h2>Request Private Event</h2>
          
          <!-- Quick Response Indicator -->
          <div class="response-indicator response-indicator--dark">
            <div class="online-dot"></div>
            <span class="response-text">We typically reply within 1 hour - 24/7 support team</span>
          </div>
        </div>

        <div class="team-size-selector">
          <select id="private_participant_count_style2" name="participant_count" onchange="calculatePrivateTotalStyle2()">
            {% for i in (1..100) %}
              <option value="{{ i }}" {% if i == 10 %}selected{% endif %}>{{ i }} people</option>
            {% endfor %}
          </select>
        </div>

        <div class="form-fields-v2">
          <input type="text" id="private_name_style2" name="name" placeholder="Enter your name" required>
          <input type="email" id="private_email_style2" name="email" placeholder="Enter your email" required>
          <textarea id="private_message_style2" name="message" placeholder="Preferred dates, special requests, accessibility needs, or any other details (optional)" rows="3" required></textarea>
        </div>

        <button type="button" class="quote-button-v2" onclick="submitFormStyle2(this)">
          Get Instant Quote
              </button>

        <div class="success-message-style2" style="display: none;">
          <div class="success-icon">✓</div>
          <p>Awesome! We'll send you a custom quote within 2 hours!</p>
            </div>

          </div>

      <!-- Alternative Private Booking Form - Style 3 (Light Theme) -->
      {% elsif section.settings.private_booking_style == 'style3' %}
      
      <div class="private-booking-card-v3" data-price-per-person="{{ price_per_person }}">

        <div class="private-event-title-internal">
          <h2>Request Private Event</h2>
          
          <!-- Quick Response Indicator -->
          <div class="response-indicator response-indicator--light">
            <div class="online-dot"></div>
            <span class="response-text">We typically reply within 1 hour - 24/7 support team</span>
          </div>
        </div>

        <div class="team-size-selector">
          <select id="private_participant_count_style3" name="participant_count" onchange="calculatePrivateTotalStyle3()">
            {% for i in (1..100) %}
              <option value="{{ i }}" {% if i == 10 %}selected{% endif %}>{{ i }} people</option>
            {% endfor %}
          </select>
        </div>

        <div class="form-fields-v2">
          <input type="text" id="private_name_style3" name="name" placeholder="Enter your name" required>
          <input type="email" id="private_email_style3" name="email" placeholder="Enter your email" required>
          <textarea id="private_message_style3" name="message" placeholder="Preferred dates, special requests, accessibility needs, or any other details (optional)" rows="3" required></textarea>
        </div>

        <button type="button" class="quote-button-v2" onclick="submitFormStyle3(this)">
          Get Instant Quote
        </button>

        <div class="success-message-style2" style="display: none;">
          <div class="success-icon">✓</div>
          <p>Awesome! We'll send you a custom quote within 2 hours!</p>
        </div>

      </div>
      
      <!-- Contact Buttons - Outside Container -->
      <div class="contact-buttons-external">
        <a href="tel:650-200-3809" class="contact-button-external">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
          </svg>
          <span>Call (650) 200-3809</span>
        </a>
        <a href="mailto:info@kraftstories.com" class="contact-button-external">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
            <polyline points="22,6 12,13 2,6"></polyline>
          </svg>
          <span>Email Us</span>
        </a>
      </div>
      
      {% endif %}
      
      <!-- Floating Google Reviews Widget (Only show if not NYC location to avoid conflicts) -->
      {% unless event_location == 'nyc' %}
        <script 
          type="text/javascript" 
          src="https://cdn.grw.reputon.com/assets/widget.js?shop=611249-3.myshopify.com" 
          defer>
        </script>
        <div class="reputon-google-reviews-widget"
             data-content-index="2"
             data-theme="light"
             data-type="basic"
             data-minimize="false"
             data-sticky="true"
             data-position-vertical="bottom"
             data-position-horizontal="right">
        </div>
      {% endunless %}
      
      {% unless event_location == 'nyc' %}
        <script>
          // Auto-minimize Google Reviews widget on mobile
          function setMobileMinimize() {
            const widget = document.querySelector('.reputon-google-reviews-widget');
            if (widget && window.innerWidth <= 768) {
              widget.setAttribute('data-minimize', 'true');
            }
          }
          
          // Set on load and resize
          document.addEventListener('DOMContentLoaded', setMobileMinimize);
          window.addEventListener('resize', setMobileMinimize);
        </script>
      {% endunless %}
      
      <!-- Custom Booking Code Area -->
      {% if section.settings.custom_booking_code != blank %}
      <div class="custom-booking-container" style="margin-bottom: 30px;">
        {{ section.settings.custom_booking_code }}
        
        <!-- UTM tracking for Cowlendar iframe -->
        <script>
          // Defer this to avoid interfering with Cowlendar initialization
          setTimeout(function() {
            // Look for Cowlendar iframes in the custom booking container
            const cowlendarIframes = document.querySelectorAll('.custom-booking-container iframe[src*="cowlendar"]');
            
            if (cowlendarIframes.length > 0) {
              // Found Cowlendar iframe(s)
              cowlendarIframes.forEach(iframe => {
                // Store original source
                const originalSrc = iframe.src;
                
                // Get stored UTM parameters
                const storedUtmParams = JSON.parse(sessionStorage.getItem('ga4_utm_params') || '{}');
                
                if (Object.keys(storedUtmParams).length > 0) {
                  try {
                    // Create URL object to easily modify parameters
                    const iframeSrc = new URL(originalSrc);
                    
                    // Add UTM parameters to iframe src
                    for (const [key, value] of Object.entries(storedUtmParams)) {
                      iframeSrc.searchParams.set(key, value);
                    }
                    
                    // Add booking type parameter
                    iframeSrc.searchParams.set('booking_system', 'cowlendar');
                    iframeSrc.searchParams.set('booking_type', 'individual');
                    
                    // Update iframe source
                    iframe.src = iframeSrc.toString();
                    
                    // Track the individual booking view with UTM data
                    if (typeof window.trackIndividualBooking === 'function') {
                      window.trackIndividualBooking({
                        workshopName: document.querySelector('h1.event-title-h1')?.textContent || 'Unknown Workshop'
                      });
                    }
                    
                    // Track Pinterest engagement if this is a Pinterest visitor
                    if (typeof window.trackPinterestConversion === 'function') {
                      window.trackPinterestConversion({
                        type: 'booking_initiated',
                        value: 0, // Will be filled in after booking completion
                        booking_type: 'individual'
                      });
                    }
                  } catch (e) {
                    console.error('Error updating Cowlendar iframe with UTM parameters:', e);
                  }
                }
                
                // Listen for messages from the iframe (if Cowlendar supports postMessage)
                window.addEventListener('message', function(event) {
                  // Check if the message is from Cowlendar
                  if (event.origin.includes('cowlendar')) {
                    try {
                      const data = JSON.parse(event.data);
                      
                      // If it's a booking confirmation
                      if (data.event === 'booking_confirmation' || data.action === 'booking_completed') {
                        // Track the individual booking completion
                        if (typeof window.sendEventWithUtm === 'function') {
                          window.sendEventWithUtm('individual_booking_confirmed', {
                            booking_system: 'cowlendar',
                            booking_type: 'individual',
                            workshop_name: document.querySelector('h1.event-title-h1')?.textContent || 'Unknown Workshop'
                          });
                        }
                        
                        // Increment individual booking count for segment analysis
                        const individualBookingCount = parseInt(localStorage.getItem('individual_booking_count') || '0');
                        localStorage.setItem('individual_booking_count', individualBookingCount + 1);
                      }
                    } catch (e) {
                      // Not JSON or other error
                      console.error('Error processing message from Cowlendar:', e);
                    }
                  }
                });
              });
            }
            
            // Also look for direct links to Cowlendar
            const cowlendarLinks = document.querySelectorAll('a[href*="cowlendar"]');
            
            if (cowlendarLinks.length > 0) {
              cowlendarLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                  e.preventDefault();
                  
                  // Get the original Cowlendar URL
                  let bookingUrl = this.getAttribute('href');
                  
                  // Get stored UTM parameters
                  const utmParams = JSON.parse(sessionStorage.getItem('ga4_utm_params') || '{}');
                  
                  // Create a unique session ID to track this booking attempt
                  const sessionId = 'session_' + Date.now();
                  
                  // Store the current session with UTM data
                  localStorage.setItem(sessionId, JSON.stringify({
                    utmParams: utmParams,
                    timestamp: Date.now(),
                    referrer: document.referrer
                  }));
                  
                  // Create URL object for easy parameter handling
                  let finalUrl = new URL(bookingUrl);
                  
                  // Add UTM parameters to the URL
                  for (const [key, value] of Object.entries(utmParams)) {
                    finalUrl.searchParams.set(key, value);
                  }
                  
                  // Add session ID and booking info
                  finalUrl.searchParams.set('session_id', sessionId);
                  finalUrl.searchParams.set('booking_system', 'cowlendar');
                  finalUrl.searchParams.set('booking_type', 'individual');
                  
                  // Track the booking initiation
                  if (typeof window.trackIndividualBooking === 'function') {
                    window.trackIndividualBooking({
                      workshopName: document.querySelector('h1.event-title-h1')?.textContent || 'Unknown Workshop'
                    });
                  }
                  
                  // Track Pinterest engagement if this is a Pinterest visitor
                  if (typeof window.trackPinterestConversion === 'function') {
                    window.trackPinterestConversion({
                      type: 'booking_initiated',
                      value: 0, // Will be filled in after booking completion
                      booking_type: 'individual'
                    });
                  }
                  
                  // Redirect to Cowlendar with UTM parameters
                  window.location.href = finalUrl.toString();
                });
              });
            }
          }, 2000); // Wait 2 seconds to avoid interfering with Cowlendar
        </script>
          </div>
        {% endif %}

        <!-- Private Booking Form -->
      {% assign price_per_person = product.selected_or_first_available_variant.price | money_without_currency | default: 99 %}
      {% if section.settings.private_booking_style == 'style1' or section.settings.private_booking_style == blank %}
        <div class="booking-form private" data-price-per-person="{{ price_per_person }}">
        <h2 class="booking-title" onclick="togglePrivateBookingForm()">
          <span class="private-icon-wrapper">
            <svg id="private-icon" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 508.19 407.23">
              <defs>
                <linearGradient id="icon-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" stop-color="#0d2b45" />
                  <stop offset="50%" stop-color="#1e5f8f" />
                  <stop offset="100%" stop-color="#3498db" />
                </linearGradient>
              </defs>
              <path class="icon-path" d="M507.36,369.59L425.95,23.61c-3.27-13.9-15.53-23.61-29.81-23.61H72.65c-14.9,0-27.05,10.64-28.9,25.3L.24,371.28c-1.11,8.86,1.76,17.92,7.88,24.86,6.22,7.05,15.03,11.09,24.18,11.09h69.07l-7.57-32.44h-61.23s-.04-.03-.06-.05L65.35,113.54l63.55,270.08c3.27,13.9,15.53,23.61,29.81,23.61h318.85c9.41,0,18.16-4.23,24.01-11.61,5.84-7.38,7.96-16.87,5.8-26.03ZM308.15,260.56c-5.65,13.17-17.48,22.33-31.64,24.5-2.12.32-4.24.48-6.33.48-11.92,0-23.25-5.15-31.18-14.4l-48.83-56.97,24.63-21.11,48.83,56.97c2.86,3.33,6.53,3.18,7.98,2.96,1.45-.22,5-1.17,6.73-5.21l59.14-138,29.82,12.78-59.14,138.01Z"/>
            </svg>
          </span>
          Book Private Team Event
        </h2>
          <div class="booking-form-content show">
          <!-- Modern Clean Booking Interface -->
            <div class="modern-booking-container">
            <!-- Remove the event title header -->
            
              <!-- Quantity/Participant Selector -->
              <div class="quantity-selector">
                <label>Quantity</label>
                <div class="quantity-price-container">
                  <select id="private_participant_count" name="participant_count" onchange="calculatePrivateTotal()">
                    {% for i in (1..100) %}
                      <option value="{{ i }}" {% if i == 10 %}selected{% endif %}>{{ i }}</option>
                    {% endfor %}
                  </select>
                  <div class="price-display">
                  <span id="original_price_per_person" class="original-price">$0.00</span>
                  <span id="discounted_price_per_person" class="discounted-price">$0.00</span>
                  </div>
                </div>
              </div>



            <!-- Calendar Date Selector -->
            <div class="calendar-container">
              <!-- Month Navigation -->
              <div class="month-navigation">
                <button class="month-nav prev" id="prev-month">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                <h4 id="current-month-display">Loading...</h4>
                <button class="month-nav next" id="next-month">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9 6L15 12L9 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                  </div>
              
              <!-- Day Headers -->
              <div class="calendar-days">
                <div class="day-header">MO</div>
                <div class="day-header">TU</div>
                <div class="day-header">WE</div>
                <div class="day-header">TH</div>
                <div class="day-header">FR</div>
                <div class="day-header">SA</div>
                <div class="day-header">SU</div>
                </div>
              
              <!-- Calendar Grid (will be populated by JS) -->
              <div class="calendar-grid" id="calendar-days-grid">
                <!-- Days will be populated here -->
              </div>

              <!-- Hidden input to store selected date -->
              <input type="hidden" id="private_event_date" name="event_date" required>
              </div>

            <!-- Time Selection -->
            <div class="time-selector">
              <label for="private_event_time">Event Time (PST)</label>
              <select id="private_event_time" name="event_time" required>
                <option value="09:00">9:00 AM</option>
                <option value="09:30">9:30 AM</option>
                <option value="10:00">10:00 AM</option>
                <option value="10:30">10:30 AM</option>
                <option value="11:00">11:00 AM</option>
                <option value="11:30">11:30 AM</option>
                <option value="12:00">12:00 PM</option>
                <option value="12:30">12:30 PM</option>
                <option value="13:00">1:00 PM</option>
                <option value="13:30">1:30 PM</option>
                <option value="14:00">2:00 PM</option>
                <option value="14:30">2:30 PM</option>
                <option value="15:00">3:00 PM</option>
                <option value="15:30">3:30 PM</option>
                <option value="16:00">4:00 PM</option>
                <option value="16:30">4:30 PM</option>
                <option value="17:00">5:00 PM</option>
              </select>
            </div>
            
            <!-- Total Price -->
            <div class="total-price-container">
              <strong>Total:</strong> 
              <span id="private_total_price">$0.00</span>
            </div>
            
            <!-- Book Button -->
            <button type="button" onclick="showEmailInput()" class="book-now-btn">Check Availability</button>
            <p class="no-charge-notice">You won't be charged yet</p>
            
            <!-- Email Form -->
            <div id="private_email_container" class="email-container">
              <input type="text" id="private_name" name="name" placeholder="Your name" required>
              <input type="email" id="private_email" name="email" placeholder="Your email" required>
              <textarea
                id="private_optional_message"
                name="optional_message"
                placeholder="Add any additional notes or requests here (optional)"
                rows="4"
              ></textarea>
              <button type="button" class="submit-btn" onclick="submitForm(this)">Submit</button>
            </div>
            
            <!-- Success Message -->
            <p class="success-message" style="display: none;">Thank you! Your booking request has been submitted successfully.</p>
            
            <!-- Contact Link -->
            <a class="contact-link" href="#" aria-label="Contact Us">
              <span>Contact Host</span>
            </a>
          </div>
        </div>
      </div>
      {% endif %}
      

        </div>
      </div>
    </div>

<!--  -->
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
<!-- JavaScript for EmailJS and Total Calculation -->
<script src="https://cdn.jsdelivr.net/npm/@emailjs/browser@latest/dist/email.min.js"></script>
    <script>
// Initialize EmailJS
emailjs.init("kvhxqkHwqm4T1227c");

// Dynamic booking form JavaScript
let basePrice = {{ price_per_person | default: 99 }};

// Use a single consolidated initialization to avoid Cowlendar conflicts
function initializeDynamicBookingForm() {
  // Prevent multiple initialization
  if (window.dynamicBookingFormInitialized) {
    console.log('📅 Dynamic booking form already initialized, skipping duplicate initialization');
    return;
  }
  window.dynamicBookingFormInitialized = true;
  
  console.log('📅 Initializing dynamic booking form');
  
  // Initialize the private calendar
  initializePrivateCalendar();
  
  // Set default participant count and calculate total
  const participantCountElement = document.getElementById("private_participant_count");
  if (participantCountElement) {
    participantCountElement.value = 10;
    calculatePrivateTotal();
  }

  // Calculate upcoming dates for all event handles on the page
  calculateAllUpcomingDates();

  // Read more button text toggle - simplified without MutationObserver
  const bioContainer = document.querySelector('.host-bio-container');
  const readMoreBtn = document.querySelector('.read-more-btn');
  if (bioContainer && readMoreBtn) {
    // Use direct click handler instead of MutationObserver to reduce DOM watching
    readMoreBtn.addEventListener('click', function() {
      const isExpanded = bioContainer.getAttribute('data-expanded') === 'true';
      const newState = isExpanded ? 'false' : 'true';
      bioContainer.setAttribute('data-expanded', newState);
      this.textContent = newState === 'true' ? 'Read less' : 'Read more';
    });
  }
}

// Use requestAnimationFrame to ensure DOM is ready but avoid conflicts
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', function() {
    requestAnimationFrame(initializeDynamicBookingForm);
  });
} else {
  requestAnimationFrame(initializeDynamicBookingForm);
}

function initializePrivateCalendar() {
  // Check if required elements exist
  const prevButton = document.getElementById('prev-month');
  const nextButton = document.getElementById('next-month');
  const monthDisplay = document.getElementById('current-month-display');
  const calendarGrid = document.getElementById('calendar-days-grid');
  
  if (!prevButton || !nextButton || !monthDisplay || !calendarGrid) {
    console.warn('📅 Calendar elements not found, skipping calendar initialization');
    console.warn('Missing elements:', {
      prevButton: !!prevButton,
      nextButton: !!nextButton,
      monthDisplay: !!monthDisplay,
      calendarGrid: !!calendarGrid
    });
    return;
  }
  
  console.log('📅 Calendar elements found, initializing calendar');
  
  const today = new Date();
  const leadTimeDays = 7; // Default lead time
  let currentMonth = new Date(today);
  currentMonth.setDate(1); // Set to first day of month
  
  // Set minimum bookable date (today + lead time)
  const minBookableDate = new Date(today);
  minBookableDate.setDate(today.getDate() + leadTimeDays);
  
  // Initialize with current month
  renderCalendar(currentMonth, minBookableDate);
  
  // Add event listeners for month navigation
  prevButton.addEventListener('click', function() {
    currentMonth.setMonth(currentMonth.getMonth() - 1);
    renderCalendar(currentMonth, minBookableDate);
  });
  
  nextButton.addEventListener('click', function() {
    currentMonth.setMonth(currentMonth.getMonth() + 1);
    renderCalendar(currentMonth, minBookableDate);
  });
}

function renderCalendar(date, minBookableDate) {
  const monthYear = date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
  const monthDisplayElement = document.getElementById('current-month-display');
  
  // Add null check to prevent error
  if (!monthDisplayElement) {
    console.warn('Calendar month display element not found');
    return;
  }
  
  monthDisplayElement.textContent = monthYear;
  
  const calendarGrid = document.getElementById('calendar-days-grid');
  
  // Add null check for calendar grid
  if (!calendarGrid) {
    console.warn('Calendar grid element not found');
    return;
  }
  
  calendarGrid.innerHTML = '';
  
  // Get first day of month and total days in month
  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
  
  // Adjust for Monday as first day of week (0 = Monday, 6 = Sunday)
  let firstDayIndex = firstDay.getDay() - 1;
  if (firstDayIndex < 0) firstDayIndex = 6; // Sunday becomes 6
  
  // Add empty cells for days before the first day of month
  for (let i = 0; i < firstDayIndex; i++) {
    const emptyDay = document.createElement('div');
    emptyDay.className = 'calendar-day empty';
    calendarGrid.appendChild(emptyDay);
  }
  
  // Add days of the month
  for (let day = 1; day <= lastDay.getDate(); day++) {
    const dayDate = new Date(date.getFullYear(), date.getMonth(), day);
    const dayElement = document.createElement('div');
    dayElement.textContent = day;
    
    // Check if this date is bookable
    const isBookable = dayDate >= minBookableDate;
    
    if (isBookable) {
      dayElement.className = 'calendar-day available';
      dayElement.dataset.date = dayDate.toISOString().split('T')[0];
      
      dayElement.addEventListener('click', function() {
        // Remove selected class from all days
        document.querySelectorAll('.calendar-day.selected').forEach(day => {
          day.classList.remove('selected');
        });
        
        // Add selected class to this day
        this.classList.add('selected');
        
        // Update hidden input with selected date - add null check
        const dateInput = document.getElementById('private_event_date');
        if (dateInput) {
          dateInput.value = this.dataset.date;
        }
      });
    } else {
      dayElement.className = 'calendar-day unavailable';
    }
    
    calendarGrid.appendChild(dayElement);
  }
  
  // If today + lead time is in this month, select it by default
  if (minBookableDate.getMonth() === date.getMonth() && minBookableDate.getFullYear() === date.getFullYear()) {
    const defaultDateStr = minBookableDate.toISOString().split('T')[0];
    const dateInput = document.getElementById('private_event_date');
    if (dateInput) {
      dateInput.value = defaultDateStr;
    }
    
    // Find and select the day
    setTimeout(() => {
      const defaultDay = document.querySelector(`.calendar-day[data-date="${defaultDateStr}"]`);
      if (defaultDay) defaultDay.classList.add('selected');
    }, 10);
  }
}

function togglePrivateBookingForm() {
  const formContent = document.querySelector('.private .booking-form-content');
  if (formContent) {
    formContent.classList.toggle('show');
  }
}

function calculatePrivateTotal() {
  const participantCount = parseInt(document.getElementById("private_participant_count").value) || 0;
  const pricePerPerson = parseFloat(basePrice);
  
  // Calculate total without any discounts
  const total = participantCount * pricePerPerson;
  
  // Update UI
  document.getElementById("original_price_per_person").textContent = `$${pricePerPerson.toFixed(2)}`;
  document.getElementById("discounted_price_per_person").textContent = `$${pricePerPerson.toFixed(2)}`;
  document.getElementById("private_total_price").textContent = `$${total.toFixed(2)}`;
  
  // Hide discount card completely
  const discountCard = document.getElementById("discount-card");
  if (discountCard) {
    discountCard.style.display = "none";
  }
}

function showEmailInput() {
  const formContainer = event.target.closest('.booking-form');
  const emailContainer = document.getElementById('private_email_container');
  
  if (emailContainer) {
    emailContainer.style.display = 'block';
  }
}

function submitForm(button) {
  // Get the form container
  const formContainer = button.closest(".booking-form");
  
  // Get the form data
  const eventDate = document.getElementById("private_event_date").value;
  const eventTime = document.getElementById("private_event_time").value;
  const participantCount = document.getElementById("private_participant_count").value;
  const name = document.getElementById("private_name").value;
  const email = document.getElementById("private_email").value;
  const optionalMessage = document.getElementById("private_optional_message").value || "No additional message provided.";
  
  if (!email || !name || !eventDate) {
    alert('Please fill in all required fields including date selection.');
          return;
        }

  const eventPageLink = window.location.href;
  const pricePerPerson = parseFloat(basePrice);
  const totalAmount = (participantCount * pricePerPerson).toFixed(2);
  
  // Get event title from the page
  const eventTitle = document.querySelector('h1')?.textContent || 'Dynamic Event';
  const eventFormat = "Virtual / Live Hosted Event"; // Default for dynamic events
  
  const locationDetails = "The event will be hosted online. A meeting link will be shared after booking confirmation.";
  
  // Get the current product's image dynamically - get product first, then image
  let productImage = null;
  
  // Method 1: Try to get from Shopify product object
  if (typeof window.Shopify !== 'undefined' && window.Shopify.product) {
    productImage = window.Shopify.product.featured_image;
    console.log('Dynamic Booking Form - Found image from Shopify.product:', productImage);
  }
  
  // Method 2: Try to get from product data attribute if available
  if (!productImage) {
    const productElement = document.querySelector('[data-product-id]') || 
                          document.querySelector('[data-product-handle]') ||
                          document.querySelector('.product-form');
    
    if (productElement) {
      const productId = productElement.dataset.productId || 
                       productElement.dataset.productHandle ||
                       window.location.pathname.split('/').pop();
      
      if (productId) {
        // Try to get product data from Shopify
        fetch(`/products/${productId}.js`)
          .then(response => response.json())
          .then(product => {
            if (product.featured_image) {
              productImage = product.featured_image;
              console.log('Dynamic Booking Form - Found image from product API:', productImage);
            }
          })
          .catch(error => console.log('Could not fetch product data:', error));
      }
    }
  }
  
  // Method 3: Try to get from meta tags
  if (!productImage) {
    const metaImage = document.querySelector('meta[property="og:image"]')?.content ||
                     document.querySelector('meta[name="twitter:image"]')?.content;
    if (metaImage) {
      productImage = metaImage;
      console.log('Dynamic Booking Form - Found image from meta tag:', productImage);
    }
  }
  
  // Fallback to Turkish Mosaic Lamp image if nothing found
  if (!productImage) {
    productImage = 'https://kraftstories.com/cdn/shop/files/TurkishMosaicLampWorkshopIn-PersonHawaii-256_large.jpg?v=1754217171';
    console.log('Dynamic Booking Form - Using fallback image');
  }
  
  console.log('Dynamic Booking Form - Final product image:', productImage);
  
  // Prepare the email template parameters - adding back event details
  const templateParams = {
    to_email: "info@kraftstories.com",
    from_email: email,
    customer_name: name,
    event_title: eventTitle,
    event_format: eventFormat,
    event_date: eventDate,
    event_time: eventTime,
    participant_count: participantCount,
    total_amount: `$${totalAmount}`,
    event_image: productImage,
    optional_message: optionalMessage
  };
  
  const submitButton = button;
  submitButton.textContent = "Sending...";
  submitButton.disabled = true;
  
  // Send email to company
  emailjs
    .send("service_u73j0v4", "template_wm8mibh", templateParams)
    .then(() => {
      // Send confirmation email to customer - adding back event details
      const customerTemplateParams = {
        to_email: email,
        from_email: "info@kraftstories.com",
        customer_name: name,
        event_title: eventTitle,
        event_format: eventFormat,
        event_date: eventDate,
        event_time: eventTime,
        participant_count: participantCount,
        total_amount: `$${totalAmount}`,
        event_image: productImage,
        optional_message: optionalMessage
      };
      
      return emailjs.send("service_u73j0v4", "customer_confirmation", customerTemplateParams);
    })
    .then(() => {
      // Show success message inside the correct form container
      const successMessage = formContainer.querySelector(".success-message");
      successMessage.style.display = "block";
      triggerConfetti();
      
      // Hide the email form
        document.getElementById('private_email_container').style.display = 'none';
    })
    .catch((error) => {
      console.error('Email error:', error);
      alert("Failed to send booking request. Please try again later.");
    })
    .finally(() => {
      submitButton.textContent = "Submit";
      submitButton.disabled = false;
    });
}

function triggerConfetti() {
  confetti({
    particleCount: 150,
    spread: 90,
    startVelocity: 30,
    angle: 90,
    gravity: 0.7,
    origin: { x: 0.5, y: 0 },
    ticks: 300,
    colors: ['#FFD700', '#FF6347', '#00BFFF', '#ADFF2F', '#FF69B4'],
  });
}

// Functions for Style 2 Private Booking
function calculatePrivateTotalStyle2() {
  const participantCount = parseInt(document.getElementById("private_participant_count_style2").value) || 0;
  // This is a simplified version since Style 2 focuses on getting quotes rather than showing prices
  console.log(`Style 2: Selected ${participantCount} participants`);
}

// Functions for Style 3 Private Booking (Light Theme)
function calculatePrivateTotalStyle3() {
  const participantCount = parseInt(document.getElementById("private_participant_count_style3").value) || 0;
  // This is a simplified version since Style 3 focuses on getting quotes rather than showing prices
  console.log(`Style 3: Selected ${participantCount} participants`);
}

function submitFormStyle2(button) {
  // Get the form data
  const participantCount = document.getElementById("private_participant_count_style2").value;
  const name = document.getElementById("private_name_style2").value;
  const email = document.getElementById("private_email_style2").value;
  const message = document.getElementById("private_message_style2").value || "No additional message provided.";
  
  if (!email || !name || !message) {
    alert('Please fill in all required fields.');
    return;
  }
  
  const eventPageLink = window.location.href;
  const pricePerPerson = parseFloat(basePrice);
  const estimatedTotal = (participantCount * pricePerPerson).toFixed(2);
  
  // Get event title from the page
  const eventTitle = document.querySelector('h1')?.textContent || 'Dynamic Event';
  const eventFormat = "Private Team Event"; // Style 2 is specifically for private events
  
  // Get dynamic location from event type
  let locationDetails = "Private event - location to be determined";
  const eventTypeElement = document.querySelector('.event-type span');
  if (eventTypeElement) {
    const eventType = eventTypeElement.textContent.toLowerCase();
    if (eventType.includes('honolulu')) {
      locationDetails = "Private event - Honolulu, Hawaii";
    } else if (eventType.includes('new york')) {
      locationDetails = "Private event - New York, NY";
    } else if (eventType.includes('virtual')) {
      locationDetails = "Private event - Virtual/Online";
    } else if (eventType.includes('san francisco')) {
      locationDetails = "Private event - San Francisco, CA";
    }
  }
  
  // Get the current product's image dynamically - get product first, then image
  let productImage = null;
  
  // Method 1: Try to get from Shopify product object
  if (typeof window.Shopify !== 'undefined' && window.Shopify.product) {
    productImage = window.Shopify.product.featured_image;
    console.log('Dynamic Booking Form Style2 - Found image from Shopify.product:', productImage);
  }
  
  // Method 2: Try to get from product data attribute if available
  if (!productImage) {
    const productElement = document.querySelector('[data-product-id]') || 
                          document.querySelector('[data-product-handle]') ||
                          document.querySelector('.product-form');
    
    if (productElement) {
      const productId = productElement.dataset.productId || 
                       productElement.dataset.productHandle ||
                       window.location.pathname.split('/').pop();
      
      if (productId) {
        // Try to get product data from Shopify
        fetch(`/products/${productId}.js`)
          .then(response => response.json())
          .then(product => {
            if (product.featured_image) {
              productImage = product.featured_image;
              console.log('Dynamic Booking Form Style2 - Found image from product API:', productImage);
            }
          })
          .catch(error => console.log('Could not fetch product data:', error));
      }
    }
  }
  
  // Method 3: Try to get from meta tags
  if (!productImage) {
    const metaImage = document.querySelector('meta[property="og:image"]')?.content ||
                     document.querySelector('meta[name="twitter:image"]')?.content;
    if (metaImage) {
      productImage = metaImage;
      console.log('Dynamic Booking Form Style2 - Found image from meta tag:', productImage);
    }
  }
  
  // Fallback to Turkish Mosaic Lamp image if nothing found
  if (!productImage) {
    productImage = 'https://kraftstories.com/cdn/shop/files/TurkishMosaicLampWorkshopIn-PersonHawaii-256_large.jpg?v=1754217171';
    console.log('Dynamic Booking Form Style2 - Using fallback image');
  }
  
  console.log('Dynamic Booking Form Style2 - Final product image:', productImage);
  
  // Prepare the email template parameters
  const templateParams = {
    to_email: "info@kraftstories.com",
    from_email: email,
    customer_name: name,
    event_title: eventTitle,
    event_format: eventFormat,
    event_date: "To be scheduled",
    event_time: "To be scheduled",
    participant_count: participantCount,
    total_amount: `$${estimatedTotal} (estimated)`,
    location_details: locationDetails,
    optional_message: message,
    event_page_link: eventPageLink,
    event_image: productImage
  };
  
  const submitButton = button;
  submitButton.textContent = "Sending...";
  submitButton.disabled = true;
  
  // Send email to company
  emailjs
    .send("service_u73j0v4", "template_wm8mibh", templateParams)
    .then(() => {
      // Send confirmation email to customer
      const customerTemplateParams = {
        to_email: email,
        from_email: "info@kraftstories.com",
        customer_name: name,
        event_title: eventTitle,
        event_format: eventFormat,
        event_date: "To be scheduled",
        event_time: "To be scheduled",
        participant_count: participantCount,
        total_amount: `$${estimatedTotal} (estimated)`,
        location_details: locationDetails,
        event_page_link: eventPageLink,
        event_image: productImage,
        optional_message: message
      };
      
      return emailjs.send("service_u73j0v4", "customer_confirmation", customerTemplateParams);
    })
    .then(() => {
      // Show success message
      const successMessage = document.querySelector(".success-message-style2");
      successMessage.style.display = "block";
      triggerConfetti();
      
      // Clear form
      document.getElementById("private_name_style2").value = "";
      document.getElementById("private_email_style2").value = "";
      document.getElementById("private_message_style2").value = "";
    })
    .catch((error) => {
      console.error('Email error:', error);
      alert("Failed to send booking request. Please try again later.");
    })
    .finally(() => {
      submitButton.textContent = "Get Instant Quote";
      submitButton.disabled = false;
    });
}

function submitFormStyle3(button) {
  // Get the form data
  const participantCount = document.getElementById("private_participant_count_style3").value;
  const name = document.getElementById("private_name_style3").value;
  const email = document.getElementById("private_email_style3").value;
  const message = document.getElementById("private_message_style3").value || "No additional message provided.";
  
  if (!email || !name || !message) {
    alert('Please fill in all required fields.');
    return;
  }
  
  const eventPageLink = window.location.href;
  const pricePerPerson = parseFloat(basePrice);
  const estimatedTotal = (participantCount * pricePerPerson).toFixed(2);
  
  // Get event title from the page
  const eventTitle = document.querySelector('h1')?.textContent || 'Dynamic Event';
  const eventFormat = "Private Team Event"; // Style 3 is specifically for private events
  
  // Get dynamic location from event type
  let locationDetails = "Private event - location to be determined";
  const eventTypeElement = document.querySelector('.event-type span');
  if (eventTypeElement) {
    const eventType = eventTypeElement.textContent.toLowerCase();
    if (eventType.includes('honolulu')) {
      locationDetails = "Private event - Honolulu, Hawaii";
    } else if (eventType.includes('new york')) {
      locationDetails = "Private event - New York, NY";
    } else if (eventType.includes('virtual')) {
      locationDetails = "Private event - Virtual/Online";
    } else if (eventType.includes('san francisco')) {
      locationDetails = "Private event - San Francisco, CA";
    }
  }
  
  // Get the current product's image dynamically
  let productImage = null;
  
  // Method 1: Try to get from Shopify product object
  if (typeof window.Shopify !== 'undefined' && window.Shopify.product) {
    productImage = window.Shopify.product.featured_image;
    console.log('Dynamic Booking Form Style3 - Found image from Shopify.product:', productImage);
  }
  
  // Method 2: Try to get from product data attribute if available
  if (!productImage) {
    const productElement = document.querySelector('[data-product-id]') || 
                          document.querySelector('[data-product-handle]') ||
                          document.querySelector('.product-form');
    
    if (productElement) {
      const productId = productElement.dataset.productId || 
                       productElement.dataset.productHandle ||
                       window.location.pathname.split('/').pop();
      
      if (productId) {
        // Try to get product data from Shopify
        fetch(`/products/${productId}.js`)
          .then(response => response.json())
          .then(product => {
            if (product.featured_image) {
              productImage = product.featured_image;
              console.log('Dynamic Booking Form Style3 - Found image from product API:', productImage);
            }
          })
          .catch(error => console.log('Could not fetch product data:', error));
      }
    }
  }
  
  // Method 3: Try to get from meta tags
  if (!productImage) {
    const metaImage = document.querySelector('meta[property="og:image"]')?.content ||
                     document.querySelector('meta[name="twitter:image"]')?.content;
    if (metaImage) {
      productImage = metaImage;
      console.log('Dynamic Booking Form Style3 - Found image from meta tag:', productImage);
    }
  }
  
  // Fallback to Turkish Mosaic Lamp image if nothing found
  if (!productImage) {
    productImage = 'https://kraftstories.com/cdn/shop/files/TurkishMosaicLampWorkshopIn-PersonHawaii-256_large.jpg?v=1754217171';
    console.log('Dynamic Booking Form Style3 - Using fallback image');
  }
  
  console.log('Dynamic Booking Form Style3 - Final product image:', productImage);
  
  // Prepare the email template parameters
  const templateParams = {
    to_email: "info@kraftstories.com",
    from_email: email,
    customer_name: name,
    event_title: eventTitle,
    event_format: eventFormat,
    event_date: "To be scheduled",
    event_time: "To be scheduled",
    participant_count: participantCount,
    total_amount: `$${estimatedTotal} (estimated)`,
    location_details: locationDetails,
    optional_message: message,
    event_page_link: eventPageLink,
    event_image: productImage
  };
  
  const submitButton = button;
  submitButton.textContent = "Sending...";
  submitButton.disabled = true;
  
  // Send email to company
  emailjs
    .send("service_u73j0v4", "template_wm8mibh", templateParams)
    .then(() => {
      // Send confirmation email to customer
      const customerTemplateParams = {
        to_email: email,
        from_email: "info@kraftstories.com",
        customer_name: name,
        event_title: eventTitle,
        event_format: eventFormat,
        event_date: "To be scheduled",
        event_time: "To be scheduled",
        participant_count: participantCount,
        total_amount: `$${estimatedTotal} (estimated)`,
        location_details: locationDetails,
        event_page_link: eventPageLink,
        event_image: productImage,
        optional_message: message
      };
      
      return emailjs.send("service_u73j0v4", "customer_confirmation", customerTemplateParams);
    })
    .then(() => {
      // Show success message
      const successMessage = document.querySelector(".private-booking-card-v3 .success-message-style2");
      successMessage.style.display = "block";
      triggerConfetti();
      
      // Clear form
      document.getElementById("private_name_style3").value = "";
      document.getElementById("private_email_style3").value = "";
      document.getElementById("private_message_style3").value = "";
    })
    .catch((error) => {
      console.error('Email error:', error);
      alert("Failed to send booking request. Please try again later.");
    })
    .finally(() => {
      submitButton.textContent = "Get Instant Quote";
      submitButton.disabled = false;
    });
}

// Function to calculate upcoming dates for all events on the page
function calculateAllUpcomingDates() {
  // Find all upcoming pills containers
  const containers = document.querySelectorAll('[id^="upcoming-pills-"]');
  
  containers.forEach(container => {
    const eventHandle = container.id.replace('upcoming-pills-', '');
    
    // Get the schedule data from the parent pills container using data attributes
    const parentContainer = container.closest('.pills-container');
    if (!parentContainer) return;
    
    const dataElement = parentContainer.querySelector('.schedule-data-hidden');
    if (!dataElement) return;
    
    // Use data attributes which contain the parsed data from Liquid
    const daysText = dataElement.getAttribute('data-days') || '';
    const parsedTimes = dataElement.getAttribute('data-times') || '';
    const timezone = dataElement.getAttribute('data-timezone') || 'EST';
    
    if (!daysText || !parsedTimes) {
      container.innerHTML = '<div class="no-schedule-pills">No schedule available</div>';
      return;
    }
    
    calculateUpcomingDatesForEvent(container, daysText, parsedTimes, timezone);
  });
}

function calculateUpcomingDatesForEvent(container, daysText, parsedTimes, timezone) {
  const dayNames = daysText.split(',').map(d => d.trim());
  // Use the parsed times that were processed by Liquid (pipe-separated)
  const times = parsedTimes.split('|').map(t => t.trim());
  
  if (dayNames.length === 0 || times.length === 0) {
    container.innerHTML = '<div class="no-schedule-pills">No schedule available</div>';
    return;
  }
  
  // Create general schedule display like workshop cards
  let displayDays;
  if (dayNames.length >= 5) {
    displayDays = 'Daily';
  } else {
    // Convert to abbreviations
    const shortDays = dayNames.map(day => {
      const dayMap = {
        'Monday': 'Mon', 'Tuesday': 'Tue', 'Wednesday': 'Wed', 'Thursday': 'Thu',
        'Friday': 'Fri', 'Saturday': 'Sat', 'Sunday': 'Sun'
      };
      return dayMap[day] || day;
    });
    
    if (dayNames.length < 3) {
      displayDays = 'Every ' + shortDays.join(', ');
    } else {
      displayDays = shortDays.join(', ');
    }
  }
  
  const timesDisplay = times.join(', ');
  
  // Check for Today availability
  const today = new Date();
  const dayMap = {
    'Sunday': 0, 'Monday': 1, 'Tuesday': 2, 'Wednesday': 3,
    'Thursday': 4, 'Friday': 5, 'Saturday': 6
  };
  
  const todayDayName = Object.keys(dayMap).find(key => dayMap[key] === today.getDay());
  
  const todayAvailable = dayNames.includes(todayDayName);
  
  // Check if today's times are still available (2-hour lead time)
  const twoHoursFromNow = new Date(today.getTime() + (2 * 60 * 60 * 1000));
  const todayHasAvailableTimes = todayAvailable && times.some(time => {
    const timeParts = time.match(/(\d{1,2}):?(\d{2})?\s*(AM|PM)?/i);
    if (timeParts) {
      let hours = parseInt(timeParts[1]);
      const minutes = parseInt(timeParts[2] || '0');
      const ampm = timeParts[3];
      
      if (ampm) {
        if (ampm.toUpperCase() === 'PM' && hours !== 12) hours += 12;
        if (ampm.toUpperCase() === 'AM' && hours === 12) hours = 0;
      }
      
      const timeToday = new Date(today);
      timeToday.setHours(hours, minutes, 0, 0);
      return timeToday > twoHoursFromNow;
    }
    return false;
  });
  
  let html = '';
  
  // Always show general schedule first
  html += `
    <div class="date-pill schedule-pill">
      <span class="pill-date">${displayDays}</span>
      <span class="pill-time">${timesDisplay}</span>
    </div>
  `;
  
  // Add Today pill if available
  if (todayHasAvailableTimes) {
    const availableTodayTimes = times.filter(time => {
      const timeParts = time.match(/(\d{1,2}):?(\d{2})?\s*(AM|PM)?/i);
      if (timeParts) {
        let hours = parseInt(timeParts[1]);
        const minutes = parseInt(timeParts[2] || '0');
        const ampm = timeParts[3];
        
        if (ampm) {
          if (ampm.toUpperCase() === 'PM' && hours !== 12) hours += 12;
          if (ampm.toUpperCase() === 'AM' && hours === 12) hours = 0;
        }
        
        const timeToday = new Date(today);
        timeToday.setHours(hours, minutes, 0, 0);
        return timeToday > twoHoursFromNow;
      }
      return false;
    });
    
    // Create a single "Join us today" message with all available times
    if (availableTodayTimes.length > 0) {
      let timeText = '';
      if (availableTodayTimes.length === 1) {
        timeText = availableTodayTimes[0];
      } else if (availableTodayTimes.length === 2) {
        timeText = `${availableTodayTimes[0]} or ${availableTodayTimes[1]}`;
      } else {
        // For more than 2 times, use comma separation with "or" for the last one
        timeText = availableTodayTimes.slice(0, -1).join(', ') + ' or ' + availableTodayTimes[availableTodayTimes.length - 1];
      }
      
      html += `
        <div class="date-pill today">
          <span class="pill-date">Join us today at</span>
          <span class="pill-time">${timeText}</span>
        </div>
      `;
    }
  }
  
  
  container.innerHTML = html;
}

// Quantity selector functions
function updateQuantity(change, buttonElement) {
  const quantityInput = document.querySelector('.quantity-input');
  const quantityLabel = document.querySelector('.quantity-label');
  
  if (!quantityInput || !quantityLabel) {
    console.log('Elements not found!', {quantityInput, quantityLabel});
    return;
  }
  
  // Add animation to the button
  if (buttonElement) {
    buttonElement.classList.add('animate-press');
    setTimeout(() => {
      buttonElement.classList.remove('animate-press');
    }, 200);
  }
  
  let currentValue = parseInt(quantityInput.value) || 1;
  let newValue = Math.max(1, currentValue + change);
  
  quantityInput.value = newValue;
  
  // Update the text immediately
  quantityLabel.textContent = newValue === 1 ? 'person' : 'people';
  
  console.log('Updated to:', newValue, 'Text:', quantityLabel.textContent);
  
  // Trigger change event for other listeners
  quantityInput.dispatchEvent(new Event('change'));
}

function updateQuantityDisplay(quantity) {
  const quantityLabel = document.querySelector('.quantity-label');
  if (!quantityLabel) {
    console.log('Quantity label not found!');
    return;
  }
  
  const numericQuantity = parseInt(quantity) || 1;
  quantityLabel.textContent = numericQuantity === 1 ? 'person' : 'people';
  
  console.log('Display updated:', numericQuantity, '→', quantityLabel.textContent);
}

// Variant Selection Function for Image Cards
function selectVariantCard(variantId, element) {
  // Check if variant is available
  const isAvailable = element.getAttribute('data-variant-available') === 'true';
  if (!isAvailable) {
    return; // Don't allow selection of unavailable variants
  }
  
  // Remove selected class from all variant cards
  document.querySelectorAll('.variant-option-card').forEach(card => {
    card.classList.remove('selected');
  });
  
  // Add selected class to clicked variant card
  element.classList.add('selected');
  
  // Update hidden input with selected variant ID
  const variantInput = document.querySelector('input[name="id"][data-product-form-variant]');
  if (variantInput) {
    variantInput.value = variantId;
  }
  
  // Update any price displays if needed
  const variantPrice = element.getAttribute('data-variant-price');
  if (variantPrice) {
    const priceElements = document.querySelectorAll('.product-price');
    priceElements.forEach(priceEl => {
      if (!priceEl.classList.contains('product-price--original')) {
        // Format price for display
        const formattedPrice = new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD'
        }).format(variantPrice / 100);
        priceEl.textContent = formattedPrice;
      }
    });
  }
  
  // Update URL without page reload for better navigation
  const currentUrl = new URL(window.location);
  currentUrl.searchParams.set('variant', variantId);
  window.history.replaceState({}, '', currentUrl);
  
  // Trigger any existing variant change events for theme compatibility
  const form = document.querySelector('.product-form');
  if (form) {
    const changeEvent = new CustomEvent('variant:change', {
      detail: { 
        variantId: variantId, 
        price: variantPrice,
        available: isAvailable,
        title: element.getAttribute('data-variant-title')
      }
    });
    form.dispatchEvent(changeEvent);
  }
  
  // Update button availability
  const addToCartBtn = document.querySelector('.add-to-cart-btn');
  if (addToCartBtn) {
    addToCartBtn.disabled = !isAvailable;
    const buttonText = addToCartBtn.querySelector('[data-button-text]');
    if (buttonText) {
      buttonText.textContent = isAvailable ? 'Book Now' : 'Sold Out';
    }
  }
  
  // Update any Buy It Now buttons with new variant ID
  const buyItNowBtns = document.querySelectorAll('[data-variant-id]');
  buyItNowBtns.forEach(btn => {
    btn.setAttribute('data-variant-id', variantId);
  });
  
  // Trigger analytics event if available
  if (typeof gtag === 'function') {
    gtag('event', 'variant_selected', {
      'event_category': 'ecommerce',
      'event_label': element.getAttribute('data-variant-title'),
      'value': variantPrice / 100
    });
  }
  
  console.log('Variant selected:', variantId, 'Available:', isAvailable, 'Price:', variantPrice);
}

// Initialize variant selector with image cards on page load
document.addEventListener('DOMContentLoaded', function() {
  // Handle dynamic background colors for event types
  const eventTypeElements = document.querySelectorAll('.event-type[data-bg-color]');
  eventTypeElements.forEach(element => {
    const bgColor = element.getAttribute('data-bg-color');
    if (bgColor) {
      element.style.background = bgColor;
    }
  });
  // Set up variant cards with keyboard navigation
  const variantCards = document.querySelectorAll('.variant-option-card');
  variantCards.forEach(card => {
    // Add keyboard support
    card.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        const variantId = this.getAttribute('data-variant-id');
        selectVariantCard(variantId, this);
      }
    });
    
    // Make focusable
    card.setAttribute('tabindex', '0');
  });
  
  // Ensure initial variant is properly selected
  const selectedCard = document.querySelector('.variant-option-card.selected');
  if (selectedCard) {
    const variantId = selectedCard.getAttribute('data-variant-id');
    console.log('Initial variant selected:', variantId);
  }
  
  // Update quantity input reference
  const quantityInput = document.querySelector('.quantity-input');
  if (quantityInput) {
    quantityInput.addEventListener('change', function() {
      updateQuantityDisplay(this.value);
    });
  }
});

// Force initialization when page loads
window.addEventListener('load', function() {
  console.log('Window loaded, initializing...');
  setTimeout(function() {
    const quantityInput = document.querySelector('.quantity-input');
    const quantityLabel = document.querySelector('.quantity-label');
    
    console.log('Found elements:', {quantityInput, quantityLabel});
    
    if (quantityInput && quantityLabel) {
      const currentValue = parseInt(quantityInput.value) || 1;
      quantityLabel.textContent = currentValue === 1 ? 'person' : 'people';
      console.log('Force initialized with:', currentValue, '→', quantityLabel.textContent);
    }
  }, 1000);
});

// Also try on DOMContentLoaded
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM loaded, trying to initialize...');
  setTimeout(function() {
    const quantityInput = document.querySelector('.quantity-input');
    const quantityLabel = document.querySelector('.quantity-label');
    
    if (quantityInput && quantityLabel) {
      const currentValue = parseInt(quantityInput.value) || 1;
      quantityLabel.textContent = currentValue === 1 ? 'person' : 'people';
      console.log('DOM init:', currentValue, '→', quantityLabel.textContent);
    }
  }, 500);
});

    </script>

    <!-- Product-Specific Loox Reviews Section -->
    {% if product and product.metafields.loox.num_reviews and product.metafields.loox.num_reviews > 0 %}
      <div class="loox-reviews-section" style="margin-top: 60px; padding: 40px 0 0 0; border-top: 1px solid #e0e0e0;">
        <div class="container" style="max-width: 1200px; margin: 0 auto; padding: 0 20px;">
          
          <!-- Reviews Header -->
          <div class="reviews-header" style="text-align: center; margin-bottom: 20px;">
            <img src="https://cdn.shopify.com/s/files/1/0642/7741/4077/files/enjoy-the-memories.png?v=1751317746" 
                 alt="Enjoy the Memories" 
                 style="width: 180px; height: auto; margin-bottom: 16px; display: block; margin-left: auto; margin-right: auto;">
            <h2 style="font-size: 2.4rem; font-weight: bold; color: #333; margin-bottom: 8px;">
              What Our Customers Say
            </h2>
            
            <!-- Simple description without redundant rating display -->
            <p style="color: #666; font-size: 16px; max-width: 600px; margin: 0 auto; line-height: 1.5;">
              Real feedback from workshop participants
            </p>
          </div>

          <!-- Loox Dynamic Reviews Widget (Product-Specific) -->
          <div class="loox-reviews-widget-container" style="margin-top: 10px;">
            <!-- Use correct Loox classes and attributes -->
            <div style="width: 100%; max-width: 1200px; margin: 0 auto;">
              <div class="loox-reviews-widget loox-carousel loox-carousel-mini" 
                   data-product-id="{{ product.id }}"
                   data-shop="{{ shop.permanent_domain }}"
                   data-only-photos="false"
                   data-aggregated="false" 
                   data-limit="8"
                   data-hide-thumbnails="false"
                   data-maxwidth="1200"
                   data-is-sample="true">
                                 <!-- Loox will populate this automatically -->
              </div>
            </div>
          </div>

        </div>
      </div>

      <!-- Simple Loox Script Loading -->
      <script async src="//loox.io/widget/loox.js?shop={{ shop.permanent_domain }}"></script>
      
      <!-- Pinterest Tracking for Reviews -->
      <script>
        document.addEventListener('DOMContentLoaded', function() {
          setTimeout(function() {
            const reviewsContainer = document.querySelector('.loox-reviews-section');
            if (reviewsContainer) {
              const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                  if (entry.isIntersecting) {
                    // Track Pinterest visitor review engagement
                    if (typeof window.trackPinterestConversion === 'function') {
                      window.trackPinterestConversion({
                        type: 'reviews_viewed',
                        value: 0,
                        product_id: {{ product.id }},
                        content_type: 'social_proof'
                      });
                    }
                    
                    // Track general review engagement
                    if (typeof gtag === 'function') {
                      gtag('event', 'view_reviews', {
                        event_category: 'engagement',
                        product_id: {{ product.id }},
                        product_name: {{ product.title | json }}
                      });
                    }
                    
                    observer.unobserve(entry.target);
                  }
                });
              }, { threshold: 0.5 });
              
              observer.observe(reviewsContainer);
            }
          }, 2000); // Wait for Loox to load
        });
      </script>
    {% endif %}

          <!-- Scroll to Reviews Function -->
      <script>
        function scrollToReviews() {
          const reviewsSection = document.querySelector('.loox-reviews-section');
          if (reviewsSection) {
            reviewsSection.scrollIntoView({ 
              behavior: 'smooth',
              block: 'start'
            });
            
            // Track click event
            if (typeof gtag === 'function') {
              gtag('event', 'click_reviews_from_title', {
                event_category: 'engagement',
                product_id: {{ product.id | default: 0 }},
                product_name: {{ product.title | default: 'Unknown' | json }}
              });
            }
          }
        }

        // Rating is now properly loaded via Liquid templates using Loox metafields
        // No need for dynamic JavaScript updates since we have the data server-side
      </script>

{% schema %}
{
  "name": "Dynamic Booking Form",
  "settings": [
    {
      "type": "text",
      "id": "event_handle",
      "label": "Event Handle",
      "info": "Enter the handle of the event Metaobject (e.g., 'virtual-terrarium-workshop')"
    },
    {
      "type": "select",
      "id": "container_size",
      "label": "Container Size",
      "options": [
        {
          "value": "full-screen",
          "label": "Full Screen"
        },
        {
          "value": "page-width",
          "label": "Page Width"
        },
        {
          "value": "large",
          "label": "Large"
        },
        {
          "value": "medium",
          "label": "Medium"
        }
      ],
      "default": "large"
    },
    {
      "type": "checkbox",
      "id": "add_side_paddings",
      "label": "Add Side Paddings",
      "default": true
    },
    {
      "type": "range",
      "id": "mobile_side_padding",
      "label": "Mobile Side Padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "default": 20,
      "unit": "px",
      "info": "Side padding for mobile devices"
    },
    {
      "type": "html",
      "id": "custom_booking_code",
      "label": "Custom Booking Code",
      "info": "Add your custom booking code here. This will replace the public booking form."
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color Scheme",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        },
        {
          "value": "custom-1",
          "label": "Custom 1"
        },
        {
          "value": "custom-2",
          "label": "Custom 2"
        },
        {
          "value": "custom-3",
          "label": "Custom 3"
        },
        {
          "value": "white",
          "label": "White"
        },
        {
          "value": "black",
          "label": "Black"
        },
        {
          "value": "custom-5",
          "label": "Custom 5"
        }
      ],
      "default": "default"
    },
    {
      "type": "select",
      "id": "private_booking_style",
      "label": "Private Booking Style",
      "options": [
        {
          "value": "style1",
          "label": "Style 1 - Classic Form"
        },
        {
          "value": "style2",
          "label": "Style 2 - Modern Card (Dark)"
        },
        {
          "value": "style3",
          "label": "Style 3 - Modern Card (Light)"
        }
      ],
      "default": "style1"
    },
    {
      "type": "header",
      "content": "Next Class Information"
    },
    {
      "type": "checkbox",
      "id": "show_next_class",
      "label": "Show Next Class Information",
      "default": true,
      "info": "Automatically calculate and display next available class based on metaobject schedule"
    },
    {
      "type": "header",
      "content": "Location Detection"
    },
    {
      "type": "checkbox",
      "id": "enable_location_detection",
      "label": "Enable Location Detection",
      "default": true,
      "info": "Automatically detect visitor location and show relevant events (e.g., Honolulu events for Hawaii visitors)"
    },
    {
      "type": "header",
      "content": "Google Maps"
    },
    {
      "type": "text",
      "id": "google_maps_api_key",
      "label": "Google Maps API Key",
      "info": "Optional: Custom API key for Google Maps. Leave blank to use default."
    }
  ],
  "presets": [
    {
      "name": "Dynamic Booking Form",
      "category": "custom"
    }
  ]
}
{% endschema %} 